(()=>{"use strict";(function(){let e=document.getElementById("upper-bar"),t=document.createElement("button");t.classList.add("dailyButton"),t.innerHTML="Daily";let n=document.createElement("button");n.classList.add("hourlyButton"),n.innerHTML="Hourly";let d=document.createElement("div");d.classList.add("arrowContainer");let a=document.createElement("p");a.classList.add("leftArrow");let l=document.createElement("p");l.classList.add("rightArrow"),d.appendChild(a),d.appendChild(l),0==e.childNodes.length?(e.appendChild(t),e.appendChild(n),e.appendChild(d)):(e.replaceChild(t,e.children[0]),e.replaceChild(n,e.children[1]),e.replaceChild(d,e.children[2]))})(),function(){const e=document.getElementById("data-bar");e.addEventListener("wheel",(t=>{t.preventDefault(),e.scrollBy({left:t.deltaY<0?-30:30})}))}(),function(){const e=document.getElementById("data-bar");let t=!1,n=0;e.addEventListener("mousedown",(e=>{t=!0,n=e.pageX})),e.addEventListener("mousemove",(d=>{if(!t)return;d.preventDefault();const a=d.pageX,l=n-a;e.scrollLeft+=l,n=a})),e.addEventListener("mouseup",(e=>{t=!1,n=0}))}(),function(){const e=document.getElementById("data-bar");let t=0,n=0,d=0,a=!1;e.addEventListener("touchstart",(e=>{t=e.touches[0].pageX,n=Date.now(),a=!0,d=0})),e.addEventListener("touchmove",(l=>{if(!a)return;l.preventDefault();const r=l.touches[0].pageX,o=t-r;e.scrollLeft+=o,t=r;const c=Date.now();d=o/(c-n),n=c})),e.addEventListener("touchend",(()=>{a=!1,function t(){Math.abs(d)>.01&&(e.scrollLeft+=d,d*=.9,requestAnimationFrame(t))}()}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,