(()=>{"use strict";var t={304:(t,e,o)=>{o.d(e,{s:()=>r});const r="f06d23d621c748f1aed94259232004"}},e={};function o(r){var a=e[r];if(void 0!==a)return a.exports;var c=e[r]={exports:{}};return t[r](c,c.exports,o),c.exports}o.d=(t,e)=>{for(var r in e)o.o(e,r)&&!o.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t=o(304);class e{constructor(t,e,o,r,a,c,s,i){this.city=t,this.condition=e,this.condition_icon=o,this.country=r,this.humidity=a,this.local_time=c,this.celsiusData=s,this.fahrenheitData=i}test(){console.log(this.city+"\n",this.condition+"\n",this.condition_icon+"\n",this.country+"\n",this.humidity+"\n",this.local_time+"\n",this.celsiusData+"\n",this.fahrenheitData+"\n")}}class r{constructor(t){this.dailyForecast=t}test(){console.log(this.dailyForecast)}}class a{constructor(t){this.hourlyForecast=t}test(){console.log(this.hourlyForecast)}}document.getElementById("searchButton").addEventListener("click",(o=>{o.preventDefault(),async function(e){try{const o=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=${t.s}&q=${e}&days=3`,{mode:"cors"}),r=await o.json();console.log(r);const a={basic_data:{country:r.location.country,city:r.location.name,local_time:r.location.localtime,condition:r.current.condition.text,condition_icon:r.current.condition.icon,humidity:r.current.humidity},celsius:{feelslike:r.current.feelslike_c,temperature:r.current.temp_c,wind:r.current.wind_kph},fahrenheit:{feelslike:r.current.feelslike_f,temperature:r.current.temp_f,wind:r.current.wind_mph},forecast:{forecast_per_day_Celsius:{},forecast_per_day_Fahrenheit:{},forecast_per_hour:{}}};function c(){for(let t=0;t<3;t++)a.forecast.forecast_per_day_Celsius["day"+t]={date:r.forecast.forecastday[t].date,min_temp:r.forecast.forecastday[t].day.mintemp_c,max_temp:r.forecast.forecastday[t].day.maxtemp_c}}function s(){for(let t=0;t<3;t++)a.forecast.forecast_per_day_Fahrenheit["day"+t]={date:r.forecast.forecastday[t].date,min_temp:r.forecast.forecastday[t].day.mintemp_f,max_temp:r.forecast.forecastday[t].day.maxtemp_f}}function i(){for(let t=0;t<3;t++){a.forecast.forecast_per_hour["day"+t]={date:r.forecast.forecastday[t].date},a.forecast.forecast_per_hour["day"+t].hour={};for(let e=0;e<24;e++)a.forecast.forecast_per_hour["day"+t].hour["hour"+e]={condition:r.forecast.forecastday[t].hour[e].condition.icon,temperatureC:r.forecast.forecastday[t].hour[e].temp_c,temperatureF:r.forecast.forecastday[t].hour[e].temp_f,humidity:r.forecast.forecastday[t].hour[e].humidity,will_rain:r.forecast.forecastday[t].hour[e].will_it_rain}}}return c(),s(),i(),a}catch(n){console.log(n)}}(document.getElementById("location").value).then((t=>{const{city:o,condition:c,condition_icon:s,country:i,humidity:n,local_time:d}=t.basic_data,f=t.celsius,u=t.fahrenheit,l=t.forecast.forecast_per_day_Celsius,h=t.forecast.forecast_per_hour,y=new e(o,c,s,i,n,d,f,u),_=new r(l),m=new a(h);y.test(),_.test(),m.test(),console.log(t)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFDQUcsSUFDT25DLENBQ1QsQ0FBRSxNQUFPMEMsR0FDUDFELFFBQVFDLElBQUl5RCxFQUNkLENBQ0YsQ0FFRUMsQ0F6RmtCdkQsU0FBU0MsZUFBZSxZQUFZdUQsT0F5Ri9CQyxNQUFNQyxJQUMzQixNQUFNLEtBQUV4RSxFQUFJLFVBQUVDLEVBQVMsZUFBRUMsRUFBYyxRQUFFQyxFQUFPLFNBQUVDLEVBQVEsV0FBRUMsR0FDMURtRSxFQUFLN0MsV0FDRDhDLEVBQXFCRCxFQUFLdEMsUUFDMUJ3QyxFQUF3QkYsRUFBSy9CLFdBQzdCa0MsRUFBb0JILEVBQUszQixTQUFTQyx5QkFDbEM4QixFQUFxQkosRUFBSzNCLFNBQVNHLGtCQUNuQzZCLEVBQWdCLElBQUkvRSxFQUN4QkUsRUFDQUMsRUFDQUMsRUFDQUMsRUFDQUMsRUFDQUMsRUFDQW9FLEVBQ0FDLEdBRUlJLEVBQXNCLElBQUlsRSxFQUFjK0QsR0FDeENJLEVBQXVCLElBQUlsRSxFQUFlK0QsR0FDaERDLEVBQWNwRSxPQUNkcUUsRUFBb0JyRSxPQUNwQnNFLEVBQXFCdEUsT0FDckJDLFFBQVFDLElBQUk2RCxFQUFLLEdBOUdLLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9teUtleS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgS2V5ID0gXCJmMDZkMjNkNjIxYzc0OGYxYWVkOTQyNTkyMzIwMDRcIjtcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcbmltcG9ydCB7IEtleSB9IGZyb20gXCIuL215S2V5XCI7XG5cbmNsYXNzIFdlYXRoZXIge1xuICBjb25zdHJ1Y3RvcihcbiAgICBjaXR5LFxuICAgIGNvbmRpdGlvbixcbiAgICBjb25kaXRpb25faWNvbixcbiAgICBjb3VudHJ5LFxuICAgIGh1bWlkaXR5LFxuICAgIGxvY2FsX3RpbWUsXG4gICAgY2Vsc2l1c0RhdGEsXG4gICAgZmFocmVuaGVpdERhdGFcbiAgKSB7XG4gICAgdGhpcy5jaXR5ID0gY2l0eTtcbiAgICB0aGlzLmNvbmRpdGlvbiA9IGNvbmRpdGlvbjtcbiAgICB0aGlzLmNvbmRpdGlvbl9pY29uID0gY29uZGl0aW9uX2ljb247XG4gICAgdGhpcy5jb3VudHJ5ID0gY291bnRyeTtcbiAgICB0aGlzLmh1bWlkaXR5ID0gaHVtaWRpdHk7XG4gICAgdGhpcy5sb2NhbF90aW1lID0gbG9jYWxfdGltZTtcbiAgICB0aGlzLmNlbHNpdXNEYXRhID0gY2Vsc2l1c0RhdGE7XG4gICAgdGhpcy5mYWhyZW5oZWl0RGF0YSA9IGZhaHJlbmhlaXREYXRhO1xuICB9XG5cbiAgdGVzdCgpIHtcbiAgICBjb25zb2xlLmxvZyhcbiAgICAgIHRoaXMuY2l0eSArIFwiXFxuXCIsXG4gICAgICB0aGlzLmNvbmRpdGlvbiArIFwiXFxuXCIsXG4gICAgICB0aGlzLmNvbmRpdGlvbl9pY29uICsgXCJcXG5cIixcbiAgICAgIHRoaXMuY291bnRyeSArIFwiXFxuXCIsXG4gICAgICB0aGlzLmh1bWlkaXR5ICsgXCJcXG5cIixcbiAgICAgIHRoaXMubG9jYWxfdGltZSArIFwiXFxuXCIsXG4gICAgICB0aGlzLmNlbHNpdXNEYXRhICsgXCJcXG5cIixcbiAgICAgIHRoaXMuZmFocmVuaGVpdERhdGEgKyBcIlxcblwiXG4gICAgKTtcbiAgfVxufVxuXG5jbGFzcyBkYWlseUZvcmVjYXN0IHtcbiAgY29uc3RydWN0b3IoZGFpbHlGb3JlY2FzdCkge1xuICAgIHRoaXMuZGFpbHlGb3JlY2FzdCA9IGRhaWx5Rm9yZWNhc3Q7XG4gIH1cbiAgdGVzdCgpIHtcbiAgICBjb25zb2xlLmxvZyh0aGlzLmRhaWx5Rm9yZWNhc3QpO1xuICB9XG59XG5jbGFzcyBob3VybHlGb3JlY2FzdCB7XG4gIGNvbnN0cnVjdG9yKGhvdXJseUZvcmVjYXN0KSB7XG4gICAgdGhpcy5ob3VybHlGb3JlY2FzdCA9IGhvdXJseUZvcmVjYXN0O1xuICB9XG4gIHRlc3QoKSB7XG4gICAgY29uc29sZS5sb2codGhpcy5ob3VybHlGb3JlY2FzdCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdGFrZUxvY2F0aW9uKCkge1xuICBjb25zdCBzZWFyY2hCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlYXJjaEJ1dHRvblwiKTtcbiAgc2VhcmNoQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGxldCB0ZXN0aW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvY2F0aW9uXCIpLnZhbHVlO1xuICAgIGZpcmVSZXF1ZXN0KHRlc3RpbnB1dCk7XG4gIH0pO1xufVxudGFrZUxvY2F0aW9uKCk7XG5cbmFzeW5jIGZ1bmN0aW9uIGFwaVJlcXVlc3Qod2hhdExvY2F0aW9uKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVxdWVzdCA9IGF3YWl0IGZldGNoKFxuICAgICAgYGh0dHBzOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxL2ZvcmVjYXN0Lmpzb24/a2V5PSR7S2V5fSZxPSR7d2hhdExvY2F0aW9ufSZkYXlzPTNgLFxuICAgICAge1xuICAgICAgICBtb2RlOiBcImNvcnNcIixcbiAgICAgIH1cbiAgICApO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgIGNvbnN0IERhdGFPYmplY3QgPSB7XG4gICAgICBiYXNpY19kYXRhOiB7XG4gICAgICAgIGNvdW50cnk6IHJlc3BvbnNlLmxvY2F0aW9uLmNvdW50cnksXG4gICAgICAgIGNpdHk6IHJlc3BvbnNlLmxvY2F0aW9uLm5hbWUsXG4gICAgICAgIGxvY2FsX3RpbWU6IHJlc3BvbnNlLmxvY2F0aW9uLmxvY2FsdGltZSxcbiAgICAgICAgY29uZGl0aW9uOiByZXNwb25zZS5jdXJyZW50LmNvbmRpdGlvbi50ZXh0LFxuICAgICAgICBjb25kaXRpb25faWNvbjogcmVzcG9uc2UuY3VycmVudC5jb25kaXRpb24uaWNvbixcbiAgICAgICAgaHVtaWRpdHk6IHJlc3BvbnNlLmN1cnJlbnQuaHVtaWRpdHksXG4gICAgICB9LFxuICAgICAgY2Vsc2l1czoge1xuICAgICAgICBmZWVsc2xpa2U6IHJlc3BvbnNlLmN1cnJlbnQuZmVlbHNsaWtlX2MsXG4gICAgICAgIHRlbXBlcmF0dXJlOiByZXNwb25zZS5jdXJyZW50LnRlbXBfYyxcbiAgICAgICAgd2luZDogcmVzcG9uc2UuY3VycmVudC53aW5kX2twaCxcbiAgICAgIH0sXG4gICAgICBmYWhyZW5oZWl0OiB7XG4gICAgICAgIGZlZWxzbGlrZTogcmVzcG9uc2UuY3VycmVudC5mZWVsc2xpa2VfZixcbiAgICAgICAgdGVtcGVyYXR1cmU6IHJlc3BvbnNlLmN1cnJlbnQudGVtcF9mLFxuICAgICAgICB3aW5kOiByZXNwb25zZS5jdXJyZW50LndpbmRfbXBoLFxuICAgICAgfSxcbiAgICAgIGZvcmVjYXN0OiB7XG4gICAgICAgIC8vTG9vcGluZyBwZXIgZGF5cyBhbmQgaG91cnMgaW4gZnVuY3Rpb24gZm9yZWNhc3RQZXJIb3VyQ2Vsc2l1cyBhbmQgZm9yZWNhc3RfcGVyX2hvdXJfRmFocmVuaGVpdFxuICAgICAgICAvL0ZvciBsYXRlciBkZWxldGlvbiBmb3IgRmFocmVuaGVpdCBiZWNhdXNlIHRlbXAgd2lsbCBiZSBjb252ZXJ0ZWQgaW4gb2JqZWN0c1xuICAgICAgICBmb3JlY2FzdF9wZXJfZGF5X0NlbHNpdXM6IHt9LFxuICAgICAgICBmb3JlY2FzdF9wZXJfZGF5X0ZhaHJlbmhlaXQ6IHt9LFxuICAgICAgICBmb3JlY2FzdF9wZXJfaG91cjoge30sXG4gICAgICB9LFxuICAgIH07XG4gICAgZnVuY3Rpb24gZm9yZWNhc3RQZXJEYXlDZWxzaXVzKCkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpKyspIHtcbiAgICAgICAgRGF0YU9iamVjdC5mb3JlY2FzdC5mb3JlY2FzdF9wZXJfZGF5X0NlbHNpdXNbXCJkYXlcIiArIGldID0ge1xuICAgICAgICAgIGRhdGU6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmRhdGUsXG4gICAgICAgICAgbWluX3RlbXA6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmRheS5taW50ZW1wX2MsXG4gICAgICAgICAgbWF4X3RlbXA6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmRheS5tYXh0ZW1wX2MsXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZm9yZWNhc3RQZXJEYXlGYWhyZW5oZWl0KCkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpKyspIHtcbiAgICAgICAgRGF0YU9iamVjdC5mb3JlY2FzdC5mb3JlY2FzdF9wZXJfZGF5X0ZhaHJlbmhlaXRbXCJkYXlcIiArIGldID0ge1xuICAgICAgICAgIGRhdGU6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmRhdGUsXG4gICAgICAgICAgbWluX3RlbXA6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmRheS5taW50ZW1wX2YsXG4gICAgICAgICAgbWF4X3RlbXA6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmRheS5tYXh0ZW1wX2YsXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGZvcmVjYXN0UGVySG91cigpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSsrKSB7XG4gICAgICAgIERhdGFPYmplY3QuZm9yZWNhc3QuZm9yZWNhc3RfcGVyX2hvdXJbXCJkYXlcIiArIGldID0ge1xuICAgICAgICAgIGRhdGU6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmRhdGUsXG4gICAgICAgIH07XG4gICAgICAgIERhdGFPYmplY3QuZm9yZWNhc3QuZm9yZWNhc3RfcGVyX2hvdXJbXCJkYXlcIiArIGldLmhvdXIgPSB7fTtcbiAgICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCAyNDsgaysrKSB7XG4gICAgICAgICAgRGF0YU9iamVjdC5mb3JlY2FzdC5mb3JlY2FzdF9wZXJfaG91cltcImRheVwiICsgaV0uaG91cltcImhvdXJcIiArIGtdID0ge1xuICAgICAgICAgICAgY29uZGl0aW9uOiByZXNwb25zZS5mb3JlY2FzdC5mb3JlY2FzdGRheVtpXS5ob3VyW2tdLmNvbmRpdGlvbi5pY29uLFxuICAgICAgICAgICAgdGVtcGVyYXR1cmVDOiByZXNwb25zZS5mb3JlY2FzdC5mb3JlY2FzdGRheVtpXS5ob3VyW2tdLnRlbXBfYyxcbiAgICAgICAgICAgIHRlbXBlcmF0dXJlRjogcmVzcG9uc2UuZm9yZWNhc3QuZm9yZWNhc3RkYXlbaV0uaG91cltrXS50ZW1wX2YsXG4gICAgICAgICAgICBodW1pZGl0eTogcmVzcG9uc2UuZm9yZWNhc3QuZm9yZWNhc3RkYXlbaV0uaG91cltrXS5odW1pZGl0eSxcbiAgICAgICAgICAgIHdpbGxfcmFpbjogcmVzcG9uc2UuZm9yZWNhc3QuZm9yZWNhc3RkYXlbaV0uaG91cltrXS53aWxsX2l0X3JhaW4sXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvcmVjYXN0UGVyRGF5Q2Vsc2l1cygpO1xuICAgIGZvcmVjYXN0UGVyRGF5RmFocmVuaGVpdCgpO1xuICAgIGZvcmVjYXN0UGVySG91cigpO1xuICAgIHJldHVybiBEYXRhT2JqZWN0O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgfVxufVxuZnVuY3Rpb24gZmlyZVJlcXVlc3QoaW5wdXR2YWx1ZSkge1xuICBhcGlSZXF1ZXN0KGlucHV0dmFsdWUpLnRoZW4oKGRhdGEpID0+IHtcbiAgICBjb25zdCB7IGNpdHksIGNvbmRpdGlvbiwgY29uZGl0aW9uX2ljb24sIGNvdW50cnksIGh1bWlkaXR5LCBsb2NhbF90aW1lIH0gPVxuICAgICAgZGF0YS5iYXNpY19kYXRhO1xuICAgIGNvbnN0IGN1cnJlbnRDZWxzaXVzRGF0YSA9IGRhdGEuY2Vsc2l1cztcbiAgICBjb25zdCBjdXJyZW50RmFocmVuaGVpdERhdGEgPSBkYXRhLmZhaHJlbmhlaXQ7XG4gICAgY29uc3QgZGFpbHlGb3JlY2FzdERhdGEgPSBkYXRhLmZvcmVjYXN0LmZvcmVjYXN0X3Blcl9kYXlfQ2Vsc2l1cztcbiAgICBjb25zdCBob3VybHlGb3JlY2FzdERhdGEgPSBkYXRhLmZvcmVjYXN0LmZvcmVjYXN0X3Blcl9ob3VyO1xuICAgIGNvbnN0IGN1cnJlbldlYXRoZXIgPSBuZXcgV2VhdGhlcihcbiAgICAgIGNpdHksXG4gICAgICBjb25kaXRpb24sXG4gICAgICBjb25kaXRpb25faWNvbixcbiAgICAgIGNvdW50cnksXG4gICAgICBodW1pZGl0eSxcbiAgICAgIGxvY2FsX3RpbWUsXG4gICAgICBjdXJyZW50Q2Vsc2l1c0RhdGEsXG4gICAgICBjdXJyZW50RmFocmVuaGVpdERhdGFcbiAgICApO1xuICAgIGNvbnN0IGRhaWx5Rm9yZWNhc3RPYmplY3QgPSBuZXcgZGFpbHlGb3JlY2FzdChkYWlseUZvcmVjYXN0RGF0YSk7XG4gICAgY29uc3QgaG91cmx5Rm9yZWNhc3RPYmplY3QgPSBuZXcgaG91cmx5Rm9yZWNhc3QoaG91cmx5Rm9yZWNhc3REYXRhKTtcbiAgICBjdXJyZW5XZWF0aGVyLnRlc3QoKTtcbiAgICBkYWlseUZvcmVjYXN0T2JqZWN0LnRlc3QoKTtcbiAgICBob3VybHlGb3JlY2FzdE9iamVjdC50ZXN0KCk7XG4gICAgY29uc29sZS5sb2coZGF0YSk7XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbIktleSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZCIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIldlYXRoZXIiLCJjb25zdHJ1Y3RvciIsImNpdHkiLCJjb25kaXRpb24iLCJjb25kaXRpb25faWNvbiIsImNvdW50cnkiLCJodW1pZGl0eSIsImxvY2FsX3RpbWUiLCJjZWxzaXVzRGF0YSIsImZhaHJlbmhlaXREYXRhIiwidGhpcyIsInRlc3QiLCJjb25zb2xlIiwibG9nIiwiZGFpbHlGb3JlY2FzdCIsImhvdXJseUZvcmVjYXN0IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiYXN5bmMiLCJ3aGF0TG9jYXRpb24iLCJyZXF1ZXN0IiwiZmV0Y2giLCJtb2RlIiwicmVzcG9uc2UiLCJqc29uIiwiRGF0YU9iamVjdCIsImJhc2ljX2RhdGEiLCJsb2NhdGlvbiIsIm5hbWUiLCJsb2NhbHRpbWUiLCJjdXJyZW50IiwidGV4dCIsImljb24iLCJjZWxzaXVzIiwiZmVlbHNsaWtlIiwiZmVlbHNsaWtlX2MiLCJ0ZW1wZXJhdHVyZSIsInRlbXBfYyIsIndpbmQiLCJ3aW5kX2twaCIsImZhaHJlbmhlaXQiLCJmZWVsc2xpa2VfZiIsInRlbXBfZiIsIndpbmRfbXBoIiwiZm9yZWNhc3QiLCJmb3JlY2FzdF9wZXJfZGF5X0NlbHNpdXMiLCJmb3JlY2FzdF9wZXJfZGF5X0ZhaHJlbmhlaXQiLCJmb3JlY2FzdF9wZXJfaG91ciIsImZvcmVjYXN0UGVyRGF5Q2Vsc2l1cyIsImkiLCJkYXRlIiwiZm9yZWNhc3RkYXkiLCJtaW5fdGVtcCIsImRheSIsIm1pbnRlbXBfYyIsIm1heF90ZW1wIiwibWF4dGVtcF9jIiwiZm9yZWNhc3RQZXJEYXlGYWhyZW5oZWl0IiwibWludGVtcF9mIiwibWF4dGVtcF9mIiwiZm9yZWNhc3RQZXJIb3VyIiwiaG91ciIsImsiLCJ0ZW1wZXJhdHVyZUMiLCJ0ZW1wZXJhdHVyZUYiLCJ3aWxsX3JhaW4iLCJ3aWxsX2l0X3JhaW4iLCJlcnJvciIsImFwaVJlcXVlc3QiLCJ2YWx1ZSIsInRoZW4iLCJkYXRhIiwiY3VycmVudENlbHNpdXNEYXRhIiwiY3VycmVudEZhaHJlbmhlaXREYXRhIiwiZGFpbHlGb3JlY2FzdERhdGEiLCJob3VybHlGb3JlY2FzdERhdGEiLCJjdXJyZW5XZWF0aGVyIiwiZGFpbHlGb3JlY2FzdE9iamVjdCIsImhvdXJseUZvcmVjYXN0T2JqZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==