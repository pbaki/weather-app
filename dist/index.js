(()=>{"use strict";var e={810:(e,t,a)=>{function n(e,t,a,n){let i=document.getElementById("data-bar"),r=document.createElement("p");r.classList.add("dailyDateHolder");let o=e.split("-").slice(1,3).join("/");0==o.split("")[6]&&(o=o.split(""),o.splice(6,1),o=o.join("")),o&&(r.innerHTML=o);let c=document.createElement("img");c.classList.add("dailyConditionIcon"),c.setAttribute("src",t),c.setAttribute("alt","Weather Condition Icon");let d=document.createElement("p");d.classList.add("dailyConditionText"),d.innerHTML=n;let s=document.createElement("h2");s.classList.add("dailyTemperatureHolder"),s.innerHTML=a+" °C";let l=document.createElement("div");l.classList.add("dailyContainer"),l.appendChild(c),l.appendChild(d),l.appendChild(r),l.appendChild(s),i.appendChild(l)}a.d(t,{j:()=>n}),function(){let e=document.getElementById("upper-bar"),t=document.createElement("button");t.classList.add("dailyButton"),t.innerHTML="Daily";let a=document.createElement("button");a.classList.add("hourlyButton"),a.innerHTML="Hourly";let n=document.createElement("div");n.classList.add("arrowContainer");let i=document.createElement("p");i.classList.add("leftArrow");let r=document.createElement("p");r.classList.add("rightArrow"),n.appendChild(i),n.appendChild(r),0==e.childNodes.length?(e.appendChild(t),e.appendChild(a),e.appendChild(n)):(e.replaceChild(t,e.children[0]),e.replaceChild(a,e.children[1]),e.replaceChild(n,e.children[2]))}(),function(){const e=document.getElementById("data-bar");e.addEventListener("wheel",(t=>{t.preventDefault(),e.scrollBy({left:t.deltaY<0?-30:30})}))}()},743:(e,t,a)=>{a.d(t,{X:()=>i,d:()=>r});var n=a(530);function i(e,t,a,n,i,r){const o=document.getElementById("basic-data");let c=document.createElement("h2");c.classList.add("cityCountryNameName"),c.innerHTML=e+", "+t;let d=document.createElement("p");d.classList.add("timeDate"),d.innerHTML=a;let s=document.createElement("div");s.classList.add("conditionContainer");let l=document.createElement("img");l.setAttribute("src",n),l.setAttribute("alt","Weather Condition Icon");let h=document.createElement("h2");h.classList.add("whetherCondition"),h.innerHTML=i,s.appendChild(h),s.appendChild(l);let u=document.createElement("h1");u.classList.add("currentTemperature"),u.innerHTML=r+" °C",0==o.childNodes.length?(o.appendChild(c),o.appendChild(d),o.appendChild(s),o.appendChild(u)):(o.replaceChild(c,o.children[0]),o.replaceChild(d,o.children[1]),o.replaceChild(s,o.children[2]),o.replaceChild(u,o.children[3]))}function r(e,t,a,i,r,o,c){const d=document.getElementById("additional-data");let s=document.createElement("p");s.classList.add("humidityData"),s.innerHTML="Humidity<br>"+e+" %";let l=document.createElement("p");l.classList.add("feelslikeData"),l.innerHTML="Feels Like<br>"+t+" °C";let h=document.createElement("p");h.classList.add("windspeedData"),h.innerHTML="Wind Speed<br>"+a+" kph";let u=document.createElement("p");u.classList.add("chanceRainData"),u.innerHTML="Chance Of Rain<br>"+(0,n.K)(c,o)+" %",0==i[0]&&((i=i.split("")).shift(),i=i.join(""));let p=document.createElement("p");p.classList.add("sunriseData"),p.innerHTML="Sunrise<br>"+i,0==r[0]&&((r=r.split("")).shift(),r=r.join(""));let m=document.createElement("p");m.classList.add("sunsetData"),m.innerHTML="Sunset<br>"+r,0==d.childNodes.length?(d.appendChild(s),d.appendChild(l),d.appendChild(h),d.appendChild(p),d.appendChild(m),d.appendChild(u)):(d.replaceChild(s,d.children[0]),d.replaceChild(l,d.children[1]),d.replaceChild(h,d.children[2]),d.replaceChild(p,d.children[3]),d.replaceChild(m,d.children[4]),d.replaceChild(u,d.children[5]))}},304:(e,t,a)=>{a.d(t,{s:()=>n});const n="f06d23d621c748f1aed94259232004"},530:(e,t,a)=>{function n(e,t){let a=0,n=0,i=[];for(let r=0;r<Object.keys(e.day0.hour).length;r++){let o=e.day0.hour[`hour${r}`].time;if(new Date(o).getTime()>new Date(t).getTime()&&e.day0.hour[`hour${r}`].chance_of_rain>0){if(n+=1,n>1){i[1]=e.day0.hour[`hour${r}`].chance_of_rain;let t=i[0]/100,a=t+i[1]/100*(1-t);i[0]=100*a}else i.push(e.day0.hour[`hour${r}`].chance_of_rain);a+=e.day0.hour[`hour${r}`].chance_of_rain}}return 0==n?0:1==n?a:Math.round(100*i[0])/100}a.d(t,{K:()=>n})}},t={};function a(n){var i=t[n];if(void 0!==i)return i.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,a),r.exports}a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=a(304),t=a(743),n=a(810);class i{constructor(e,t,a,n,i,r,o,c,d,s,l){this.country=e,this.city=t,this.local_time=a,this.condition=n,this.condition_icon=i,this.humidity=r,this.sunrise=o,this.sunset=c,this.celsiusData=d,this.fahrenheitData=s,this.hourlyForecastData=l}basicDataDOM(){(0,t.X)(this.city,this.country,this.local_time,this.condition_icon,this.condition,this.celsiusData.temperature)}additionalDataDOM(){(0,t.d)(this.humidity,this.celsiusData.feelslike,this.celsiusData.wind,this.sunrise,this.sunset,this.local_time,this.hourlyForecastData)}}class r{constructor(e){this.dailyForecast=e}generateDailyData(){const e=document.getElementById("data-bar");for(;e.firstChild;)e.removeChild(e.firstChild);for(let e=0;e<Object.keys(this.dailyForecast).length;e++){let t=this.dailyForecast["day"+e].date,a=this.dailyForecast["day"+e].condition_icon,i=this.dailyForecast["day"+e].avg_tempC,r=this.dailyForecast["day"+e].condition;(0,n.j)(t,a,i,r)}}generateDailyDataButton(){document.getElementsByClassName("dailyButton")[0].addEventListener("click",(()=>{this.generateDailyData()}))}}class o{constructor(e){this.hourlyForecast=e}generateHourlyData(){const e=document.getElementById("data-bar");for(;e.firstChild;)e.removeChild(e.firstChild);for(let e=0;e<Object.keys(this.hourlyForecast).length;e++)for(let t=0;t<24;t++){let a=this.hourlyForecast["day"+e].hour["hour"+t].time,i=this.hourlyForecast["day"+e].hour["hour"+t].condition_icon,r=this.hourlyForecast["day"+e].hour["hour"+t].temperatureC,o=this.hourlyForecast["day"+e].hour["hour"+t].condition;(0,n.j)(a,i,r,o)}}generateHourlyDataButton(){document.getElementsByClassName("hourlyButton")[0].addEventListener("click",(()=>{this.generateHourlyData()}))}}document.getElementById("searchButton").addEventListener("click",(t=>{t.preventDefault(),async function(t){try{const a=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=${e.s}&q=${t}&days=3`,{mode:"cors"}),n=await a.json();console.log(n);const i={basic_data:{country:n.location.country,city:n.location.name,local_time:n.location.localtime,condition:n.current.condition.text,condition_icon:"https:"+n.current.condition.icon,humidity:n.current.humidity,sunrise:n.forecast.forecastday[0].astro.sunrise,sunset:n.forecast.forecastday[0].astro.sunset},celsius:{feelslike:n.current.feelslike_c,temperature:n.current.temp_c,wind:n.current.wind_kph},fahrenheit:{feelslike:n.current.feelslike_f,temperature:n.current.temp_f,wind:n.current.wind_mph},forecast:{forecast_per_day:{},forecast_per_hour:{}}};function r(){for(let e=0;e<3;e++)i.forecast.forecast_per_day["day"+e]={date:n.forecast.forecastday[e].date,condition_icon:"https:"+n.forecast.forecastday[e].day.condition.icon,condition:n.forecast.forecastday[e].day.condition.text,avg_tempC:n.forecast.forecastday[e].day.avgtemp_c,avg_tempF:n.forecast.forecastday[e].day.avgtemp_f}}function o(){for(let e=0;e<3;e++){i.forecast.forecast_per_hour["day"+e]={date:n.forecast.forecastday[e].date},i.forecast.forecast_per_hour["day"+e].hour={};for(let t=0;t<24;t++)i.forecast.forecast_per_hour["day"+e].hour["hour"+t]={condition_icon:"https:"+n.forecast.forecastday[e].hour[t].condition.icon,condition:n.forecast.forecastday[e].hour[t].condition.text,temperatureC:n.forecast.forecastday[e].hour[t].temp_c,temperatureF:n.forecast.forecastday[e].hour[t].temp_f,humidity:n.forecast.forecastday[e].hour[t].humidity,chance_of_rain:n.forecast.forecastday[e].hour[t].chance_of_rain,chance_of_snow:n.forecast.forecastday[e].hour[t].chance_of_snow,time:n.forecast.forecastday[e].hour[t].time}}}return r(),o(),i}catch(c){console.log(c)}}(document.getElementById("location").value).then((e=>{const{country:t,city:a,local_time:n,condition:c,condition_icon:d,humidity:s,sunrise:l,sunset:h}=e.basic_data,u=e.celsius,p=e.fahrenheit,m=e.forecast.forecast_per_day,y=e.forecast.forecast_per_hour,f=new i(t,a,n,c,d,s,l,h,u,p,y),C=new r(m),_=new o(y);C.generateDailyData(),C.generateDailyDataButton(),_.generateHourlyDataButton(),console.log(e),f.basicDataDOM(),f.additionalDataDOM()}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,