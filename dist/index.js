(()=>{"use strict";var e={743:(e,t,a)=>{function i(e,t,a,i,o,r){const c=document.getElementById("basic-data");let n=document.createElement("h2");n.classList.add("cityCountryNameName"),n.innerHTML=e+", "+t;let s=document.createElement("p");s.classList.add("timeDate"),s.innerHTML=a;let d=document.createElement("div");d.classList.add("conditionContainer");let l=document.createElement("img");l.setAttribute("src",i),l.setAttribute("alt","Weather Condition Icon");let h=document.createElement("h2");h.classList.add("whetherCondition"),h.innerHTML=o,d.appendChild(h),d.appendChild(l);let u=document.createElement("h1");u.classList.add("currentTemperature"),u.innerHTML=r+" Â°C",0==c.childNodes.length?(c.appendChild(n),c.appendChild(s),c.appendChild(d),c.appendChild(u)):(c.replaceChild(n,c.children[0]),c.replaceChild(s,c.children[1]),c.replaceChild(d,c.children[2]),c.replaceChild(u,c.children[4]))}a.d(t,{X:()=>i})},304:(e,t,a)=>{a.d(t,{s:()=>i});const i="f06d23d621c748f1aed94259232004"}},t={};function a(i){var o=t[i];if(void 0!==o)return o.exports;var r=t[i]={exports:{}};return e[i](r,r.exports,a),r.exports}a.d=(e,t)=>{for(var i in t)a.o(t,i)&&!a.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=a(304),t=a(743);class i{constructor(e,t,a,i,o,r,c,n){this.city=e,this.condition=t,this.condition_icon=a,this.country=i,this.humidity=o,this.local_time=r,this.celsiusData=c,this.fahrenheitData=n}celsiusDataLog(){console.log("Feels Like: "+this.celsiusData.feelslike+" C\n","Temperature: "+this.celsiusData.temperature+" C\n","Wind Speed: "+this.celsiusData.wind+" kph\n")}fahrenheitDataLog(){console.log("Feels Like: "+this.fahrenheitData.feelslike+" F\n","Temperature: "+this.fahrenheitData.temperature+" F\n","Wind Speed: "+this.fahrenheitData.wind+" mph\n")}basicDataLog(){console.log(this.city+"\n",this.condition+"\n",this.condition_icon+"\n",this.country+"\n",this.humidity+"\n",this.local_time+"\n")}basicDataDOM(){(0,t.X)(this.city,this.country,this.local_time,this.condition_icon,this.condition,this.celsiusData.temperature)}}class o{constructor(e){this.dailyForecast=e}test(){console.log(this.dailyForecast)}}class r{constructor(e){this.hourlyForecast=e}test(){console.log(this.hourlyForecast)}}document.getElementById("searchButton").addEventListener("click",(t=>{t.preventDefault(),async function(t){try{const a=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=${e.s}&q=${t}&days=3`,{mode:"cors"}),i=await a.json(),o={basic_data:{country:i.location.country,city:i.location.name,local_time:i.location.localtime,condition:i.current.condition.text,condition_icon:"https:"+i.current.condition.icon,humidity:i.current.humidity},celsius:{feelslike:i.current.feelslike_c,temperature:i.current.temp_c,wind:i.current.wind_kph},fahrenheit:{feelslike:i.current.feelslike_f,temperature:i.current.temp_f,wind:i.current.wind_mph},forecast:{forecast_per_day_Celsius:{},forecast_per_day_Fahrenheit:{},forecast_per_hour:{}}};function r(){for(let e=0;e<3;e++)o.forecast.forecast_per_day_Celsius["day"+e]={date:i.forecast.forecastday[e].date,min_temp:i.forecast.forecastday[e].day.mintemp_c,max_temp:i.forecast.forecastday[e].day.maxtemp_c}}function c(){for(let e=0;e<3;e++)o.forecast.forecast_per_day_Fahrenheit["day"+e]={date:i.forecast.forecastday[e].date,min_temp:i.forecast.forecastday[e].day.mintemp_f,max_temp:i.forecast.forecastday[e].day.maxtemp_f}}function n(){for(let e=0;e<3;e++){o.forecast.forecast_per_hour["day"+e]={date:i.forecast.forecastday[e].date},o.forecast.forecast_per_hour["day"+e].hour={};for(let t=0;t<24;t++)o.forecast.forecast_per_hour["day"+e].hour["hour"+t]={condition:"https:"+i.forecast.forecastday[e].hour[t].condition.icon,temperatureC:i.forecast.forecastday[e].hour[t].temp_c,temperatureF:i.forecast.forecastday[e].hour[t].temp_f,humidity:i.forecast.forecastday[e].hour[t].humidity,will_rain:i.forecast.forecastday[e].hour[t].will_it_rain}}}return r(),c(),n(),o}catch(s){console.log(s)}}(document.getElementById("location").value).then((e=>{const{city:t,condition:a,condition_icon:c,country:n,humidity:s,local_time:d}=e.basic_data,l=e.celsius,h=e.fahrenheit,u=e.forecast.forecast_per_day_Celsius,f=e.forecast.forecast_per_hour,m=new i(t,a,c,n,s,d,l,h);new o(u),new r(f),console.log(e),m.basicDataDOM(),m.basicDataLog(),m.celsiusDataLog(),m.fahrenheitDataLog()}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,