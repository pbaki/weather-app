(()=>{"use strict";var e={743:(e,t,a)=>{function c(e,t,a,c,r,i){const o=document.getElementById("basic-data");let n=document.createElement("h2");n.classList.add("cityCountryNameName"),n.innerHTML=e+", "+t;let s=document.createElement("p");s.classList.add("timeDate"),s.innerHTML=a;let d=document.createElement("div");d.classList.add("conditionContainer");let l=document.createElement("img");l.setAttribute("src",c),l.setAttribute("alt","Weather Condition Icon");let h=document.createElement("h2");h.classList.add("whetherCondition"),h.innerHTML=r,d.appendChild(h),d.appendChild(l);let u=document.createElement("h1");u.classList.add("currentTemperature"),u.innerHTML=i+" °C",0==o.childNodes.length?(o.appendChild(n),o.appendChild(s),o.appendChild(d),o.appendChild(u)):(o.replaceChild(n,o.children[0]),o.replaceChild(s,o.children[1]),o.replaceChild(d,o.children[2]),o.replaceChild(u,o.children[3]))}function r(e,t,a){const c=document.getElementById("additional-data");let r=document.createElement("p");r.classList.add("humidityData"),r.innerHTML="humidity "+e+" %";let i=document.createElement("p");i.classList.add("feelslikeData"),i.innerHTML="Feels Like "+t+" °C";let o=document.createElement("p");o.classList.add("windspeedData"),o.innerHTML="Wind Speed "+a+" kph",0==c.childNodes.length?(c.appendChild(r),c.appendChild(i),c.appendChild(o)):(c.replaceChild(r,c.children[0]),c.replaceChild(i,c.children[1]),c.replaceChild(o,c.children[2]))}a.d(t,{X:()=>c,d:()=>r})},304:(e,t,a)=>{a.d(t,{s:()=>c});const c="f06d23d621c748f1aed94259232004"}},t={};function a(c){var r=t[c];if(void 0!==r)return r.exports;var i=t[c]={exports:{}};return e[c](i,i.exports,a),i.exports}a.d=(e,t)=>{for(var c in t)a.o(t,c)&&!a.o(e,c)&&Object.defineProperty(e,c,{enumerable:!0,get:t[c]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=a(304),t=a(743);class c{constructor(e,t,a,c,r,i,o,n,s,d){this.country=e,this.city=t,this.local_time=a,this.condition=c,this.condition_icon=r,this.humidity=i,this.sunrise=o,this.sunset=n,this.celsiusData=s,this.fahrenheitData=d}fahrenheitDataDOM(){(0,t.d)(this.humidity,this.celsiusData.feelslike,this.celsiusData.wind)}basicDataDOM(){(0,t.X)(this.city,this.country,this.local_time,this.condition_icon,this.condition,this.celsiusData.temperature)}}class r{constructor(e){this.dailyForecast=e}test(){console.log(this.dailyForecast)}}class i{constructor(e){this.hourlyForecast=e}test(){console.log(this.hourlyForecast)}}document.getElementById("searchButton").addEventListener("click",(t=>{t.preventDefault(),async function(t){try{const a=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=${e.s}&q=${t}&days=3`,{mode:"cors"}),c=await a.json();console.log(c);const r={basic_data:{country:c.location.country,city:c.location.name,local_time:c.location.localtime,condition:c.current.condition.text,condition_icon:"https:"+c.current.condition.icon,humidity:c.current.humidity,sunrise:c.forecast.forecastday[0].astro.sunrise,sunset:c.forecast.forecastday[0].astro.sunset},celsius:{feelslike:c.current.feelslike_c,temperature:c.current.temp_c,wind:c.current.wind_kph},fahrenheit:{feelslike:c.current.feelslike_f,temperature:c.current.temp_f,wind:c.current.wind_mph},forecast:{forecast_per_day_Celsius:{},forecast_per_day_Fahrenheit:{},forecast_per_hour:{}}};function i(){for(let e=0;e<3;e++)r.forecast.forecast_per_day_Celsius["day"+e]={date:c.forecast.forecastday[e].date,min_temp:c.forecast.forecastday[e].day.mintemp_c,max_temp:c.forecast.forecastday[e].day.maxtemp_c}}function o(){for(let e=0;e<3;e++)r.forecast.forecast_per_day_Fahrenheit["day"+e]={date:c.forecast.forecastday[e].date,min_temp:c.forecast.forecastday[e].day.mintemp_f,max_temp:c.forecast.forecastday[e].day.maxtemp_f}}function n(){for(let e=0;e<3;e++){r.forecast.forecast_per_hour["day"+e]={date:c.forecast.forecastday[e].date},r.forecast.forecast_per_hour["day"+e].hour={};for(let t=0;t<24;t++)r.forecast.forecast_per_hour["day"+e].hour["hour"+t]={condition_icon:"https:"+c.forecast.forecastday[e].hour[t].condition.icon,temperatureC:c.forecast.forecastday[e].hour[t].temp_c,temperatureF:c.forecast.forecastday[e].hour[t].temp_f,humidity:c.forecast.forecastday[e].hour[t].humidity,chance_of_rain:c.forecast.forecastday[e].hour[t].chance_of_rain,chance_of_snow:c.forecast.forecastday[e].hour[t].chance_of_snow}}}return i(),o(),n(),r}catch(s){console.log(s)}}(document.getElementById("location").value).then((e=>{const{country:t,city:a,local_time:o,condition:n,condition_icon:s,humidity:d,sunrise:l,sunset:h}=e.basic_data,u=e.celsius,f=e.fahrenheit,p=e.forecast.forecast_per_day_Celsius,m=e.forecast.forecast_per_hour,y=new c(t,a,o,n,s,d,l,h,u,f);new r(p),new i(m),y.basicDataDOM(),y.fahrenheitDataDOM()}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,