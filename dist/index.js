(()=>{"use strict";var e={810:(e,t,a)=>{function n(e,t,a,n){let o=document.getElementById("data-bar"),i=document.createElement("p");i.classList.add("dailyDateHolder"),i.innerHTML=e;let r=document.createElement("img");r.classList.add("dailyConditionIcon"),r.setAttribute("src",t),r.setAttribute("alt","Weather Condition Icon");let c=document.createElement("p");c.classList.add("dailyConditionText"),c.innerHTML=n;let d=document.createElement("h1");d.classList.add("dailyTemperatureHolder"),d.innerHTML=a+" °C";let s=document.createElement("div");s.classList.add("dailyContainer"),s.appendChild(r),s.appendChild(c),s.appendChild(i),s.appendChild(d),o.appendChild(s)}a.d(t,{j1:()=>n}),function(){let e=document.getElementById("upper-bar"),t=document.createElement("button");t.classList.add("dailyButton"),t.innerHTML="Daily";let a=document.createElement("button");a.classList.add("hourlyButton"),a.innerHTML="Hourly",0==e.childNodes.length?(e.appendChild(t),e.appendChild(a)):(e.replaceChild(t,e.children[0]),e.replaceChild(a,e.children[1]))}()},743:(e,t,a)=>{function n(e,t,a,n,o,i){const r=document.getElementById("basic-data");let c=document.createElement("h2");c.classList.add("cityCountryNameName"),c.innerHTML=e+", "+t;let d=document.createElement("p");d.classList.add("timeDate"),d.innerHTML=a;let s=document.createElement("div");s.classList.add("conditionContainer");let l=document.createElement("img");l.setAttribute("src",n),l.setAttribute("alt","Weather Condition Icon");let h=document.createElement("h2");h.classList.add("whetherCondition"),h.innerHTML=o,s.appendChild(h),s.appendChild(l);let u=document.createElement("h1");u.classList.add("currentTemperature"),u.innerHTML=i+" °C",0==r.childNodes.length?(r.appendChild(c),r.appendChild(d),r.appendChild(s),r.appendChild(u)):(r.replaceChild(c,r.children[0]),r.replaceChild(d,r.children[1]),r.replaceChild(s,r.children[2]),r.replaceChild(u,r.children[3]))}function o(e,t,a,n,o){const i=document.getElementById("additional-data");let r=document.createElement("p");r.classList.add("humidityData"),r.innerHTML="Humidity "+e+" %";let c=document.createElement("p");c.classList.add("feelslikeData"),c.innerHTML="Feels Like "+t+" °C";let d=document.createElement("p");d.classList.add("windspeedData"),d.innerHTML="Wind Speed "+a+" kph",0==n[0]&&((n=n.split("")).shift(),n=n.join(""));let s=document.createElement("p");s.classList.add("sunriseData"),s.innerHTML="Sunrise "+n,0==o[0]&&((o=o.split("")).shift(),o=o.join(""));let l=document.createElement("p");l.classList.add("sunsetData"),l.innerHTML="Sunset "+o,0==i.childNodes.length?(i.appendChild(r),i.appendChild(c),i.appendChild(d),i.appendChild(s),i.appendChild(l)):(i.replaceChild(r,i.children[0]),i.replaceChild(c,i.children[1]),i.replaceChild(d,i.children[2]),i.replaceChild(s,i.children[3]),i.replaceChild(l,i.children[4]))}a.d(t,{X:()=>n,d:()=>o})},304:(e,t,a)=>{a.d(t,{s:()=>n});const n="f06d23d621c748f1aed94259232004"},530:(e,t,a)=>{function n(e,t){let a=0,n=0,o=[];for(let i=0;i<Object.keys(e.day0.hour).length;i++){let r=e.day0.hour[`hour${i}`].time;if(new Date(r).getTime()>new Date(t).getTime()&&e.day0.hour[`hour${i}`].chance_of_rain>0){if(n+=1,n>1){o[1]=e.day0.hour[`hour${i}`].chance_of_rain;let t=o[0]/100,a=t+o[1]/100*(1-t);o[0]=100*a}else o.push(e.day0.hour[`hour${i}`].chance_of_rain);a+=e.day0.hour[`hour${i}`].chance_of_rain}}return 0==n?0:1==n?a:Math.round(100*o[0])/100}function o(e,t){let a=0,n=0,o=[];for(let i=0;i<Object.keys(e.day0.hour).length;i++){let r=e.day0.hour[`hour${i}`].time;if(new Date(r).getTime()>new Date(t).getTime()&&e.day0.hour[`hour${i}`].chance_of_snow>0){if(n+=1,n>1){o[1]=e.day0.hour[`hour${i}`].chance_of_snow;let t=o[0]/100,a=t+o[1]/100*(1-t);o[0]=100*a}else o.push(e.day0.hour[`hour${i}`].chance_of_snow);a+=e.day0.hour[`hour${i}`].chance_of_snow}}return 0==n?0:1==n?a:Math.round(100*o[0])/100}a.d(t,{K:()=>n,Z:()=>o})}},t={};function a(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,a),i.exports}a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=a(304),t=a(743),n=a(530),o=a(810);class i{constructor(e,t,a,n,o,i,r,c,d,s,l){this.country=e,this.city=t,this.local_time=a,this.condition=n,this.condition_icon=o,this.humidity=i,this.sunrise=r,this.sunset=c,this.celsiusData=d,this.fahrenheitData=s,this.hourlyForecastData=l}basicDataDOM(){(0,t.X)(this.city,this.country,this.local_time,this.condition_icon,this.condition,this.celsiusData.temperature)}additionalDataDOM(){(0,t.d)(this.humidity,this.celsiusData.feelslike,this.celsiusData.wind,this.sunrise,this.sunset)}rainChance(){(0,n.K)(this.hourlyForecastData,this.local_time)}snowChance(){(0,n.Z)(this.hourlyForecastData,this.local_time)}}class r{constructor(e){this.dailyForecast=e}generateDailyData(){const e=document.getElementById("data-bar");for(;e.firstChild;)e.removeChild(e.firstChild);for(let e=0;e<Object.keys(this.dailyForecast).length;e++){let t=this.dailyForecast["day"+e].date,a=this.dailyForecast["day"+e].condition_icon,n=this.dailyForecast["day"+e].avg_tempC,i=this.dailyForecast["day"+e].condition;(0,o.j1)(t,a,n,i)}}generateDailyDataButton(){document.getElementsByClassName("dailyButton")[0].addEventListener("click",(()=>{this.generateDailyData()}))}}class c{constructor(e){this.hourlyForecast=e}generateHourlyData(){const e=document.getElementById("data-bar");for(;e.firstChild;)e.removeChild(e.firstChild);for(let e=0;e<Object.keys(this.hourlyForecast).length;e++)for(let t=0;t<24;t++){let a=this.hourlyForecast["day"+e].hour["hour"+t].time,n=this.hourlyForecast["day"+e].hour["hour"+t].condition_icon,i=this.hourlyForecast["day"+e].hour["hour"+t].temperatureC,r=this.hourlyForecast["day"+e].hour["hour"+t].condition;(0,o.j1)(a,n,i,r)}}generateHourlyDataButton(){document.getElementsByClassName("hourlyButton")[0].addEventListener("click",(()=>{this.generateHourlyData()}))}}document.getElementById("searchButton").addEventListener("click",(t=>{t.preventDefault(),async function(t){try{const a=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=${e.s}&q=${t}&days=3`,{mode:"cors"}),n=await a.json();console.log(n);const o={basic_data:{country:n.location.country,city:n.location.name,local_time:n.location.localtime,condition:n.current.condition.text,condition_icon:"https:"+n.current.condition.icon,humidity:n.current.humidity,sunrise:n.forecast.forecastday[0].astro.sunrise,sunset:n.forecast.forecastday[0].astro.sunset},celsius:{feelslike:n.current.feelslike_c,temperature:n.current.temp_c,wind:n.current.wind_kph},fahrenheit:{feelslike:n.current.feelslike_f,temperature:n.current.temp_f,wind:n.current.wind_mph},forecast:{forecast_per_day:{},forecast_per_hour:{}}};function i(){for(let e=0;e<3;e++)o.forecast.forecast_per_day["day"+e]={date:n.forecast.forecastday[e].date,condition_icon:"https:"+n.forecast.forecastday[e].day.condition.icon,condition:n.forecast.forecastday[e].day.condition.text,avg_tempC:n.forecast.forecastday[e].day.avgtemp_c,avg_tempF:n.forecast.forecastday[e].day.avgtemp_f}}function r(){for(let e=0;e<3;e++){o.forecast.forecast_per_hour["day"+e]={date:n.forecast.forecastday[e].date},o.forecast.forecast_per_hour["day"+e].hour={};for(let t=0;t<24;t++)o.forecast.forecast_per_hour["day"+e].hour["hour"+t]={condition_icon:"https:"+n.forecast.forecastday[e].hour[t].condition.icon,condition:n.forecast.forecastday[e].hour[t].condition.text,temperatureC:n.forecast.forecastday[e].hour[t].temp_c,temperatureF:n.forecast.forecastday[e].hour[t].temp_f,humidity:n.forecast.forecastday[e].hour[t].humidity,chance_of_rain:n.forecast.forecastday[e].hour[t].chance_of_rain,chance_of_snow:n.forecast.forecastday[e].hour[t].chance_of_snow,time:n.forecast.forecastday[e].hour[t].time}}}return i(),r(),o}catch(c){console.log(c)}}(document.getElementById("location").value).then((e=>{const{country:t,city:a,local_time:n,condition:o,condition_icon:d,humidity:s,sunrise:l,sunset:h}=e.basic_data,u=e.celsius,y=e.fahrenheit,m=e.forecast.forecast_per_day,f=e.forecast.forecast_per_hour,p=new i(t,a,n,o,d,s,l,h,u,y,f),_=new r(m),C=new c(f);_.generateDailyData(),_.generateDailyDataButton(),C.generateHourlyDataButton(),console.log(e),p.basicDataDOM(),p.additionalDataDOM()}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,