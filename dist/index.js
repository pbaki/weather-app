(()=>{"use strict";var e={743:(e,t,a)=>{function o(e,t,a,o,r,c){const i=document.getElementById("basic-data");let n=document.createElement("h2");n.classList.add("cityCountryNameName"),n.innerHTML=e+", "+t;let s=document.createElement("p");s.classList.add("timeDate"),s.innerHTML=a;let d=document.createElement("div");d.classList.add("conditionContainer");let l=document.createElement("img");l.setAttribute("src",o),l.setAttribute("alt","Weather Condition Icon");let h=document.createElement("h2");h.classList.add("whetherCondition"),h.innerHTML=r,d.appendChild(h),d.appendChild(l);let u=document.createElement("h1");u.classList.add("currentTemperature"),u.innerHTML=c+" °C",0==i.childNodes.length?(i.appendChild(n),i.appendChild(s),i.appendChild(d),i.appendChild(u)):(i.replaceChild(n,i.children[0]),i.replaceChild(s,i.children[1]),i.replaceChild(d,i.children[2]),i.replaceChild(u,i.children[3]))}function r(e,t,a,o,r){const c=document.getElementById("additional-data");let i=document.createElement("p");i.classList.add("humidityData"),i.innerHTML="Humidity "+e+" %";let n=document.createElement("p");n.classList.add("feelslikeData"),n.innerHTML="Feels Like "+t+" °C";let s=document.createElement("p");s.classList.add("windspeedData"),s.innerHTML="Wind Speed "+a+" kph",0==o[0]&&((o=o.split("")).shift(),o=o.join(""));let d=document.createElement("p");d.classList.add("sunriseData"),d.innerHTML="Sunrise "+o,0==r[0]&&((r=r.split("")).shift(),r=r.join(""));let l=document.createElement("p");l.classList.add("sunsetData"),l.innerHTML="Sunset "+r,0==c.childNodes.length?(c.appendChild(i),c.appendChild(n),c.appendChild(s),c.appendChild(d),c.appendChild(l)):(c.replaceChild(i,c.children[0]),c.replaceChild(n,c.children[1]),c.replaceChild(s,c.children[2]),c.replaceChild(d,c.children[3]),c.replaceChild(l,c.children[4]))}a.d(t,{X:()=>o,d:()=>r})},304:(e,t,a)=>{a.d(t,{s:()=>o});const o="f06d23d621c748f1aed94259232004"},530:(e,t,a)=>{function o(e,t){let a=0,o=0,r=[];for(let c=0;c<Object.keys(e.day0.hour).length;c++){let i=e.day0.hour[`hour${c}`].time;if(new Date(i).getTime()>new Date(t).getTime()&&e.day0.hour[`hour${c}`].chance_of_rain>0){if(o+=1,o>1){r[1]=e.day0.hour[`hour${c}`].chance_of_rain;let t=r[0]/100,a=t+r[1]/100*(1-t);r[0]=100*a}else r.push(e.day0.hour[`hour${c}`].chance_of_rain);a+=e.day0.hour[`hour${c}`].chance_of_rain}}return 0==o?0:1==o?a:Math.round(100*r[0])/100}function r(e,t){let a=0,o=0,r=[];for(let c=0;c<Object.keys(e.day0.hour).length;c++){let i=e.day0.hour[`hour${c}`].time;if(new Date(i).getTime()>new Date(t).getTime()&&e.day0.hour[`hour${c}`].chance_of_snow>0){if(o+=1,o>1){r[1]=e.day0.hour[`hour${c}`].chance_of_snow;let t=r[0]/100,a=t+r[1]/100*(1-t);r[0]=100*a}else r.push(e.day0.hour[`hour${c}`].chance_of_snow);a+=e.day0.hour[`hour${c}`].chance_of_snow}}return 0==o?0:1==o?a:Math.round(100*r[0])/100}a.d(t,{K:()=>o,Z:()=>r})}},t={};function a(o){var r=t[o];if(void 0!==r)return r.exports;var c=t[o]={exports:{}};return e[o](c,c.exports,a),c.exports}a.d=(e,t)=>{for(var o in t)a.o(t,o)&&!a.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=a(304),t=a(743),o=a(530);class r{constructor(e,t,a,o,r,c,i,n,s,d,l){this.country=e,this.city=t,this.local_time=a,this.condition=o,this.condition_icon=r,this.humidity=c,this.sunrise=i,this.sunset=n,this.celsiusData=s,this.fahrenheitData=d,this.hourlyForecastData=l}basicDataDOM(){(0,t.X)(this.city,this.country,this.local_time,this.condition_icon,this.condition,this.celsiusData.temperature)}additionalDataDOM(){(0,t.d)(this.humidity,this.celsiusData.feelslike,this.celsiusData.wind,this.sunrise,this.sunset)}rainChance(){(0,o.K)(this.hourlyForecastData,this.local_time)}snowChance(){(0,o.Z)(this.hourlyForecastData,this.local_time)}}class c{constructor(e){this.dailyForecast=e}test(){console.log(this.dailyForecast)}}class i{constructor(e){this.hourlyForecast=e}test(){console.log(this.hourlyForecast)}}document.getElementById("searchButton").addEventListener("click",(t=>{t.preventDefault(),async function(t){try{const a=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=${e.s}&q=${t}&days=3`,{mode:"cors"}),o=await a.json();console.log(o);const r={basic_data:{country:o.location.country,city:o.location.name,local_time:o.location.localtime,condition:o.current.condition.text,condition_icon:"https:"+o.current.condition.icon,humidity:o.current.humidity,sunrise:o.forecast.forecastday[0].astro.sunrise,sunset:o.forecast.forecastday[0].astro.sunset},celsius:{feelslike:o.current.feelslike_c,temperature:o.current.temp_c,wind:o.current.wind_kph},fahrenheit:{feelslike:o.current.feelslike_f,temperature:o.current.temp_f,wind:o.current.wind_mph},forecast:{forecast_per_day_Celsius:{},forecast_per_day_Fahrenheit:{},forecast_per_hour:{}}};function c(){for(let e=0;e<3;e++)r.forecast.forecast_per_day_Celsius["day"+e]={date:o.forecast.forecastday[e].date,min_temp:o.forecast.forecastday[e].day.mintemp_c,max_temp:o.forecast.forecastday[e].day.maxtemp_c}}function i(){for(let e=0;e<3;e++)r.forecast.forecast_per_day_Fahrenheit["day"+e]={date:o.forecast.forecastday[e].date,min_temp:o.forecast.forecastday[e].day.mintemp_f,max_temp:o.forecast.forecastday[e].day.maxtemp_f}}function n(){for(let e=0;e<3;e++){r.forecast.forecast_per_hour["day"+e]={date:o.forecast.forecastday[e].date},r.forecast.forecast_per_hour["day"+e].hour={};for(let t=0;t<24;t++)r.forecast.forecast_per_hour["day"+e].hour["hour"+t]={condition_icon:"https:"+o.forecast.forecastday[e].hour[t].condition.icon,temperatureC:o.forecast.forecastday[e].hour[t].temp_c,temperatureF:o.forecast.forecastday[e].hour[t].temp_f,humidity:o.forecast.forecastday[e].hour[t].humidity,chance_of_rain:o.forecast.forecastday[e].hour[t].chance_of_rain,chance_of_snow:o.forecast.forecastday[e].hour[t].chance_of_snow,time:o.forecast.forecastday[e].hour[t].time}}}return c(),i(),n(),r}catch(s){console.log(s)}}(document.getElementById("location").value).then((e=>{const{country:t,city:a,local_time:o,condition:n,condition_icon:s,humidity:d,sunrise:l,sunset:h}=e.basic_data,u=e.celsius,f=e.fahrenheit,m=e.forecast.forecast_per_day_Celsius,p=e.forecast.forecast_per_hour,y=new r(t,a,o,n,s,d,l,h,u,f,p);new c(m),new i(p),console.log(e),y.basicDataDOM(),y.additionalDataDOM()}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,