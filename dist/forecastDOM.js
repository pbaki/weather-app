(()=>{"use strict";(function(){let e=document.getElementById("upper-bar"),t=document.createElement("button");t.classList.add("dailyButton"),t.innerHTML="Daily";let n=document.createElement("button");n.classList.add("hourlyButton"),n.innerHTML="Hourly";let d=document.createElement("div");d.classList.add("arrowContainer");let l=document.createElement("p");l.classList.add("leftArrow");let a=document.createElement("p");a.classList.add("rightArrow"),d.appendChild(l),d.appendChild(a),0==e.childNodes.length?(e.appendChild(t),e.appendChild(n),e.appendChild(d)):(e.replaceChild(t,e.children[0]),e.replaceChild(n,e.children[1]),e.replaceChild(d,e.children[2]))})(),function(){const e=document.getElementById("data-bar");e.addEventListener("wheel",(t=>{t.preventDefault(),e.scrollBy({left:t.deltaY<0?-30:30})}))}(),function(){const e=document.getElementById("data-bar");let t=!1,n=0;e.addEventListener("mousedown",(e=>{t=!0,n=e.pageX})),e.addEventListener("mousemove",(d=>{if(!t)return;d.preventDefault();const l=d.pageX,a=n-l;e.scrollLeft+=a,n=l})),e.addEventListener("mouseup",(e=>{t=!1,n=0})),e.addEventListener("touchstart",(e=>{n=e.touches[0].pageX})),e.addEventListener("touchmove",(t=>{t.preventDefault();const d=t.touches[0].pageX,l=.5*(n-d);e.scrollLeft+=l})),e.addEventListener("touchend",(e=>{n=0}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,