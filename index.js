(()=>{"use strict";var e={810:(e,t,n)=>{function a(e,t,n,a){let i=document.getElementById("data-bar"),r=document.createElement("p");r.classList.add("dailyDateHolder");let o=e.split("-").slice(1,3).join("/");0==o.split("")[6]&&(o=o.split(""),o.splice(6,1),o=o.join("")),o&&(r.innerHTML=o);let s=document.createElement("img");s.classList.add("dailyConditionIcon"),s.setAttribute("src",t),s.setAttribute("alt","Weather Condition Icon");let c=document.createElement("p");c.classList.add("dailyConditionText"),c.innerHTML=a;let d=document.createElement("h2");d.classList.add("dailyTemperatureHolder");let l=document.createElement("p");l.classList.add("moreText"),l.innerHTML="Avg temp: <br>",d.innerHTML=n+" °C";let u=document.createElement("div");u.classList.add("dailyContainer"),u.appendChild(s),u.appendChild(c),u.appendChild(r),u.appendChild(l),u.appendChild(d),i.appendChild(u)}function i(e,t,n,a){let i=document.getElementById("data-bar"),r=document.createElement("p");r.classList.add("hourlyDateHolder");let o=e.split("-").slice(1,3).join("/");0==o.split("")[6]&&(o=o.split(""),o.splice(6,1),o=o.join("")),o&&(r.innerHTML=o);let s=document.createElement("img");s.classList.add("hourlyConditionIcon"),s.setAttribute("src",t),s.setAttribute("alt","Weather Condition Icon");let c=document.createElement("p");c.classList.add("hourlyConditionText"),c.innerHTML=a;let d=document.createElement("h2");d.classList.add("hourlyTemperatureHolder"),d.innerHTML=n+" °C";let l=document.createElement("div");l.classList.add("hourlyContainer"),l.appendChild(s),l.appendChild(c),l.appendChild(r),l.appendChild(d),i.appendChild(l)}function r(e){const t=document.getElementsByClassName("dailyTemperatureHolder");if(t[0])for(let n=0;n<Object.keys(e).length;n++){let a=e["day"+n].avg_tempF;t[n].innerHTML=a+" °F"}}function o(e){const t=document.getElementsByClassName("dailyTemperatureHolder");if(t[0])for(let n=0;n<Object.keys(e).length;n++){let a=e["day"+n].avg_tempC;t[n].innerHTML=a+" °C"}}function s(e){const t=document.getElementsByClassName("hourlyTemperatureHolder");if(t[0])for(let n=0;n<Object.keys(e).length;n++)for(let a=0;a<24;a++){let i=e["day"+n].hour["hour"+a].temperatureF;0==n?t[a].innerHTML=i+" °F":1==n?t[24+a].innerHTML=i+" °F":t[48+a].innerHTML=i+" °F"}}function c(e){const t=document.getElementsByClassName("hourlyTemperatureHolder");if(t[0])for(let n=0;n<Object.keys(e).length;n++)for(let a=0;a<24;a++){let i=e["day"+n].hour["hour"+a].temperatureC;0==n?t[a].innerHTML=i+" °C":1==n?t[24+a].innerHTML=i+" °C":t[48+a].innerHTML=i+" °C"}}function d(){const e=document.getElementById("data-bar"),t=document.getElementsByClassName("leftArrow")[0],n=document.getElementsByClassName("rightArrow")[0],a=e.querySelector(".dailyContainer").offsetWidth;console.log(a),t.addEventListener("click",(()=>{e.scrollLeft-=3*a})),n.addEventListener("click",(()=>{e.scrollLeft+=3*a}))}n.d(t,{Fn:()=>i,Sp:()=>d,j1:()=>a,p:()=>r,tB:()=>c,tQ:()=>o,up:()=>s}),function(){let e=document.getElementById("upper-bar"),t=document.createElement("button");t.classList.add("dailyButton"),t.innerHTML="Daily";let n=document.createElement("button");n.classList.add("hourlyButton"),n.innerHTML="Hourly";let a=document.createElement("div");a.classList.add("arrowContainer");let i=document.createElement("p");i.classList.add("leftArrow");let r=document.createElement("p");r.classList.add("rightArrow"),a.appendChild(i),a.appendChild(r),0==e.childNodes.length?(e.appendChild(t),e.appendChild(n),e.appendChild(a)):(e.replaceChild(t,e.children[0]),e.replaceChild(n,e.children[1]),e.replaceChild(a,e.children[2]))}(),function(){const e=document.getElementById("data-bar");e.addEventListener("wheel",(t=>{t.preventDefault(),e.scrollBy({left:t.deltaY<0?-30:30})}))}(),function(){const e=document.getElementById("data-bar");let t=!1,n=0;e.addEventListener("mousedown",(e=>{t=!0,n=e.pageX})),e.addEventListener("mousemove",(a=>{if(!t)return;a.preventDefault();const i=a.pageX,r=n-i;e.scrollLeft+=r,n=i})),e.addEventListener("mouseup",(e=>{t=!1,n=0})),e.addEventListener("touchstart",(e=>{n=e.touches[0].pageX})),e.addEventListener("touchmove",(t=>{t.preventDefault();const a=t.touches[0].pageX,i=.5*(n-a);e.scrollLeft+=i})),e.addEventListener("touchend",(e=>{n=0}))}()},743:(e,t,n)=>{n.d(t,{Ti:()=>o,Xe:()=>l,Xu:()=>i,dj:()=>r,of:()=>c,pg:()=>d,rO:()=>u,rz:()=>s});var a=n(530);function i(e,t,n,a,i,r){const o=document.getElementById("basic-data");let s=document.createElement("h2");s.classList.add("cityCountryNameName"),s.innerHTML=e+", "+t;let c=document.createElement("p");c.classList.add("timeDate"),c.innerHTML=n;let d=document.createElement("div");d.classList.add("conditionContainer");let l=document.createElement("img");l.setAttribute("src",a),l.setAttribute("alt","Weather Condition Icon");let u=document.createElement("h2");u.classList.add("whetherCondition"),u.innerHTML=i,d.appendChild(u),d.appendChild(l);let h=document.createElement("h1");h.classList.add("currentTemperature"),h.innerHTML=r+" °C",0==o.childNodes.length?(o.appendChild(s),o.appendChild(c),o.appendChild(d),o.appendChild(h)):(o.replaceChild(s,o.children[0]),o.replaceChild(c,o.children[1]),o.replaceChild(d,o.children[2]),o.replaceChild(h,o.children[3]))}function r(e,t,n,i,r,o,s){const c=document.getElementById("additional-data");let d=document.createElement("p");d.classList.add("humidityData"),d.innerHTML="Humidity<br>"+e+" %";let l=document.createElement("p");l.classList.add("feelslikeData"),l.innerHTML="Feels Like<br>"+t+" °C";let u=document.createElement("p");u.classList.add("windspeedData"),u.innerHTML="Wind Speed<br>"+n+" kph";let h=document.createElement("p");h.classList.add("chanceRainData"),h.innerHTML="Chance Of Rain<br>"+(0,a.K)(s,o)+" %",0==i[0]&&((i=i.split("")).shift(),i=i.join(""));let m=document.createElement("p");m.classList.add("sunriseData"),m.innerHTML="Sunrise<br>"+i,0==r[0]&&((r=r.split("")).shift(),r=r.join(""));let p=document.createElement("p");p.classList.add("sunsetData"),p.innerHTML="Sunset<br>"+r,0==c.childNodes.length?(c.appendChild(d),c.appendChild(l),c.appendChild(u),c.appendChild(m),c.appendChild(p),c.appendChild(h)):(c.replaceChild(d,c.children[0]),c.replaceChild(l,c.children[1]),c.replaceChild(u,c.children[2]),c.replaceChild(m,c.children[3]),c.replaceChild(p,c.children[4]),c.replaceChild(h,c.children[5]))}function o(){const e=document.getElementsByClassName("form")[0];if(2==e.childNodes.length)return;const t=document.createElement("div");t.classList.add("wrongInput"),t.innerHTML='Location not found. Try "City", "City, State" or "City, Country".',e.appendChild(t)}function s(){const e=document.getElementsByClassName("form")[0];2==e.childNodes.length&&e.lastChild.remove()}function c(){const e=document.getElementById("basic-data"),t=document.createElement("button");if(t.classList.add("convertToFahrenheit"),t.innerHTML="Convert to °F",!e.contains(document.getElementsByClassName("convertButtonContainer")[0]))return e.appendChild(t),t}function d(){const e=document.getElementById("basic-data"),t=document.createElement("button");if(t.classList.add("convertToCelsius"),t.innerHTML="Convert to °C",!e.contains(document.getElementsByClassName("convertButtonContainer")[0]))return e.appendChild(t),t}function l(e,t,n){document.getElementsByClassName("currentTemperature")[0].innerHTML=e+" °F",document.getElementsByClassName("feelslikeData")[0].innerHTML="Feels Like<br>"+t+" °F",document.getElementsByClassName("windspeedData")[0].innerHTML="Wind Speed<br>"+n+" mph"}function u(e,t,n){document.getElementsByClassName("currentTemperature")[0].innerHTML=e+" °C",document.getElementsByClassName("feelslikeData")[0].innerHTML="Feels Like<br>"+t+" °C",document.getElementsByClassName("windspeedData")[0].innerHTML="Wind Speed<br>"+n+" kph"}},304:(e,t,n)=>{n.d(t,{s:()=>a});const a="f06d23d621c748f1aed94259232004"},530:(e,t,n)=>{function a(e,t){let n=0,a=0,i=[];for(let r=0;r<Object.keys(e.day0.hour).length;r++){let o=e.day0.hour[`hour${r}`].time;if(new Date(o).getTime()>new Date(t).getTime()&&e.day0.hour[`hour${r}`].chance_of_rain>0){if(a+=1,a>1){i[1]=e.day0.hour[`hour${r}`].chance_of_rain;let t=i[0]/100,n=t+i[1]/100*(1-t);i[0]=100*n}else i.push(e.day0.hour[`hour${r}`].chance_of_rain);n+=e.day0.hour[`hour${r}`].chance_of_rain}}return 0==a?0:1==a?n:Math.round(100*i[0])/100}n.d(t,{K:()=>a})}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,n),r.exports}n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=n(304),t=n(743),a=n(810);class i{constructor(e,t,n,a,i,r,o,s,c,d,l){this.country=e,this.city=t,this.local_time=n,this.condition=a,this.condition_icon=i,this.humidity=r,this.sunrise=o,this.sunset=s,this.celsiusData=c,this.fahrenheitData=d,this.hourlyForecastData=l}basicDataDOM(){(0,t.Xu)(this.city,this.country,this.local_time,this.condition_icon,this.condition,this.celsiusData.temperature)}additionalDataDOM(){(0,t.dj)(this.humidity,this.celsiusData.feelslike,this.celsiusData.wind,this.sunrise,this.sunset,this.local_time,this.hourlyForecastData)}dataConverter(){let e=(0,t.of)(),n=(0,t.pg)();if(null!=e||null!=n){const a=document.getElementById("basic-data"),i=document.createElement("div");i.classList.add("convertButtonContainer"),i.appendChild(e),i.appendChild(n),a.appendChild(i),e.addEventListener("click",(()=>{(0,t.Xe)(this.fahrenheitData.temperature,this.fahrenheitData.feelslike,this.fahrenheitData.wind)})),n.addEventListener("click",(()=>{(0,t.rO)(this.celsiusData.temperature,this.celsiusData.feelslike,this.celsiusData.wind)}))}}}class r{constructor(e){this.dailyForecast=e}generateDailyData(){const e=document.getElementById("data-bar");for(;e.firstChild;)e.removeChild(e.firstChild);for(let e=0;e<Object.keys(this.dailyForecast).length;e++){let t=this.dailyForecast["day"+e].date,n=this.dailyForecast["day"+e].condition_icon,i=this.dailyForecast["day"+e].avg_tempC,r=this.dailyForecast["day"+e].condition;(0,a.j1)(t,n,i,r)}}generateDailyDataButton(){document.getElementsByClassName("dailyButton")[0].addEventListener("click",(()=>{let e=document.getElementsByClassName("currentTemperature")[0].innerHTML.split("");"F"==e[e.length-1]?(this.generateDailyData(),(0,a.p)(this.dailyForecast)):this.generateDailyData()}))}dataConverter(){let e=document.getElementsByClassName("convertToFahrenheit")[0],t=document.getElementsByClassName("convertToCelsius")[0];e.addEventListener("click",(()=>{(0,a.p)(this.dailyForecast)})),t.addEventListener("click",(()=>{(0,a.tQ)(this.dailyForecast)}))}}class o{constructor(e){this.hourlyForecast=e}generateHourlyData(){const e=document.getElementById("data-bar");for(;e.firstChild;)e.removeChild(e.firstChild);for(let e=0;e<Object.keys(this.hourlyForecast).length;e++)for(let t=0;t<24;t++){let n=this.hourlyForecast["day"+e].hour["hour"+t].time,i=this.hourlyForecast["day"+e].hour["hour"+t].condition_icon,r=this.hourlyForecast["day"+e].hour["hour"+t].temperatureC,o=this.hourlyForecast["day"+e].hour["hour"+t].condition;(0,a.Fn)(n,i,r,o)}}generateHourlyDataButton(){document.getElementsByClassName("hourlyButton")[0].addEventListener("click",(()=>{let e=document.getElementsByClassName("currentTemperature")[0].innerHTML.split("");"F"==e[e.length-1]?(this.generateHourlyData(),(0,a.up)(this.hourlyForecast)):this.generateHourlyData()}))}dataConverter(){let e=document.getElementsByClassName("convertToFahrenheit")[0],t=document.getElementsByClassName("convertToCelsius")[0];e.addEventListener("click",(()=>{(0,a.up)(this.hourlyForecast)})),t.addEventListener("click",(()=>{(0,a.tB)(this.hourlyForecast)}))}}function s(n){(async function(n){(0,t.rz)();try{let a=await("krakow"==n?n+" pl":n);const i=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=${e.s}&q=${a}&days=3`,{mode:"cors"}),r=await i.json();console.log(r);const o={basic_data:{country:r.location.country,city:r.location.name,local_time:r.location.localtime,condition:r.current.condition.text,condition_icon:"https:"+r.current.condition.icon,humidity:r.current.humidity,sunrise:r.forecast.forecastday[0].astro.sunrise,sunset:r.forecast.forecastday[0].astro.sunset},celsius:{feelslike:r.current.feelslike_c,temperature:r.current.temp_c,wind:r.current.wind_kph},fahrenheit:{feelslike:r.current.feelslike_f,temperature:r.current.temp_f,wind:r.current.wind_mph},forecast:{forecast_per_day:{},forecast_per_hour:{}}};function s(){for(let e=0;e<3;e++)o.forecast.forecast_per_day["day"+e]={date:r.forecast.forecastday[e].date,condition_icon:"https:"+r.forecast.forecastday[e].day.condition.icon,condition:r.forecast.forecastday[e].day.condition.text,avg_tempC:r.forecast.forecastday[e].day.avgtemp_c,avg_tempF:r.forecast.forecastday[e].day.avgtemp_f}}function c(){for(let e=0;e<3;e++){o.forecast.forecast_per_hour["day"+e]={date:r.forecast.forecastday[e].date},o.forecast.forecast_per_hour["day"+e].hour={};for(let t=0;t<24;t++)o.forecast.forecast_per_hour["day"+e].hour["hour"+t]={condition_icon:"https:"+r.forecast.forecastday[e].hour[t].condition.icon,condition:r.forecast.forecastday[e].hour[t].condition.text,temperatureC:r.forecast.forecastday[e].hour[t].temp_c,temperatureF:r.forecast.forecastday[e].hour[t].temp_f,humidity:r.forecast.forecastday[e].hour[t].humidity,chance_of_rain:r.forecast.forecastday[e].hour[t].chance_of_rain,chance_of_snow:r.forecast.forecastday[e].hour[t].chance_of_snow,time:r.forecast.forecastday[e].hour[t].time}}}return s(),c(),o}catch(d){console.log(d),(0,t.Ti)()}})(n).then((e=>{const{country:t,city:n,local_time:a,condition:s,condition_icon:c,humidity:d,sunrise:l,sunset:u}=e.basic_data,h=e.celsius,m=e.fahrenheit,p=e.forecast.forecast_per_day,y=e.forecast.forecast_per_hour,f=new i(t,n,a,s,c,d,l,u,h,m,y),C=new r(p),L=new o(y);f.basicDataDOM(),f.additionalDataDOM(),f.dataConverter(),C.generateDailyData(),C.generateDailyDataButton(),C.dataConverter(),L.generateHourlyDataButton(),L.dataConverter()})).then((()=>{(0,a.Sp)()})).catch((e=>{console.log(e)}))}document.getElementById("searchButton").addEventListener("click",(e=>{e.preventDefault(),s(document.getElementById("location").value)})),async function(){try{const t=await fetch(`https://api.weatherapi.com/v1/ip.json?key=${e.s}&q=auto:ip`,{mode:"cors"});return{ip:(await t.json()).ip}}catch(e){console.log(e)}}().then((e=>{s(e.ip)})).catch((e=>{console.log(e),s("London")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixRQUMxQnFCLEVBQXdCRixFQUFLZixXQUM3QmtCLEVBQW9CSCxFQUFLdEIsU0FBU1csaUJBQ2xDaEgsRUFBcUIySCxFQUFLdEIsU0FBU1ksa0JBQ25DYyxFQUFnQixJQUFJaEUsRUFDeEJqRixFQUNBRCxFQUNBa0IsRUFDQWQsRUFDQTdGLEVBQ0FzRyxFQUNBRyxFQUNBQyxFQUNBOEgsRUFDQUMsRUFDQTdILEdBRUlnSSxFQUFzQixJQUFJOU0sRUFBYzRNLEdBQ3hDRyxFQUF1QixJQUFJbE0sRUFBZWlFLEdBQ2hEK0gsRUFBYzNELGVBQ2QyRCxFQUFjMUQsb0JBQ2QwRCxFQUFjeEQsZ0JBQ2R5RCxFQUFvQnZELG9CQUNwQnVELEVBQW9CakQsMEJBQ3BCaUQsRUFBb0J6RCxnQkFDcEIwRCxFQUFxQi9DLDJCQUNyQitDLEVBQXFCMUQsZUFBZSxJQUVyQ21ELE1BQUssTUFDSixTQUFxQixJQUV0QlEsT0FBT1YsSUFDTnpLLFFBQVFDLElBQUl3SyxFQUFNLEdBRXhCLENBbkx1QmhPLFNBQVNDLGVBQWUsZ0JBQ2hDd0QsaUJBQWlCLFNBQVVhLElBQ3RDQSxFQUFNQyxpQkFFTm9ILEVBRGdCM0wsU0FBU0MsZUFBZSxZQUFZME8sTUFDOUIsSUFNMUI5QyxpQkFDRSxJQUNFLE1BQU1HLFFBQWdCQyxNQUNwQiw2Q0FBNkMsZ0JBQzdDLENBQ0VDLEtBQU0sU0FPVixNQUhhLENBQ1gwQyxVQUZxQjVDLEVBQVFJLFFBRWhCd0MsR0FHakIsQ0FBRSxNQUFPWixHQUNQekssUUFBUUMsSUFBSXdLLEVBQ2QsQ0FDRixDQUNBYSxHQUNHWCxNQUFNQyxJQUVMeEMsRUFEU3dDLEVBQUtTLEdBQ0MsSUFFaEJGLE9BQU9WLElBQ056SyxRQUFRQyxJQUFJd0ssR0FDWnJDLEVBQVksU0FBUyxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvZm9yZWNhc3RET00uanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvbWFpbkRPTS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9teUtleS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy93ZWF0aGVyQ2hhbmNlLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3dlYXRoZXItYXBwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGJ1dHRvbnMoKSB7XG4gIGxldCBidXR0b25Db250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVwcGVyLWJhclwiKTtcblxuICBsZXQgZGFpbHlCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBkYWlseUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiZGFpbHlCdXR0b25cIik7XG4gIGRhaWx5QnV0dG9uLmlubmVySFRNTCA9IFwiRGFpbHlcIjtcblxuICBsZXQgaG91cmx5QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgaG91cmx5QnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJob3VybHlCdXR0b25cIik7XG4gIGhvdXJseUJ1dHRvbi5pbm5lckhUTUwgPSBcIkhvdXJseVwiO1xuXG4gIGxldCBhcnJvd0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGFycm93Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJhcnJvd0NvbnRhaW5lclwiKTtcblxuICBsZXQgbGVmdEFycm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIGxlZnRBcnJvdy5jbGFzc0xpc3QuYWRkKFwibGVmdEFycm93XCIpO1xuXG4gIGxldCByaWdodEFycm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIHJpZ2h0QXJyb3cuY2xhc3NMaXN0LmFkZChcInJpZ2h0QXJyb3dcIik7XG5cbiAgYXJyb3dDb250YWluZXIuYXBwZW5kQ2hpbGQobGVmdEFycm93KTtcbiAgYXJyb3dDb250YWluZXIuYXBwZW5kQ2hpbGQocmlnaHRBcnJvdyk7XG5cbiAgaWYgKGJ1dHRvbkNvbnRhaW5lci5jaGlsZE5vZGVzLmxlbmd0aCA9PSAwKSB7XG4gICAgYnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKGRhaWx5QnV0dG9uKTtcbiAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQoaG91cmx5QnV0dG9uKTtcbiAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQoYXJyb3dDb250YWluZXIpO1xuICB9IGVsc2Uge1xuICAgIGJ1dHRvbkNvbnRhaW5lci5yZXBsYWNlQ2hpbGQoZGFpbHlCdXR0b24sIGJ1dHRvbkNvbnRhaW5lci5jaGlsZHJlblswXSk7XG4gICAgYnV0dG9uQ29udGFpbmVyLnJlcGxhY2VDaGlsZChob3VybHlCdXR0b24sIGJ1dHRvbkNvbnRhaW5lci5jaGlsZHJlblsxXSk7XG4gICAgYnV0dG9uQ29udGFpbmVyLnJlcGxhY2VDaGlsZChhcnJvd0NvbnRhaW5lciwgYnV0dG9uQ29udGFpbmVyLmNoaWxkcmVuWzJdKTtcbiAgfVxufVxuYnV0dG9ucygpO1xuXG5mdW5jdGlvbiBkYWlseShkYXRlLCBjb25kaXRpb25faWNvbiwgdGVtcCwgY29uZGl0aW9uVGV4dCkge1xuICBsZXQgZGFpbHlEYXRhQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYXRhLWJhclwiKTtcblxuICBsZXQgZGFpbHlEYXRlSG9sZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIGRhaWx5RGF0ZUhvbGRlci5jbGFzc0xpc3QuYWRkKFwiZGFpbHlEYXRlSG9sZGVyXCIpO1xuICBsZXQgY3V0WWVhciA9IGRhdGUuc3BsaXQoXCItXCIpLnNsaWNlKDEsIDMpO1xuICBsZXQgcmVzdWx0ID0gY3V0WWVhci5qb2luKFwiL1wiKTtcbiAgaWYgKHJlc3VsdC5zcGxpdChcIlwiKVs2XSA9PSAwKSB7XG4gICAgcmVzdWx0ID0gcmVzdWx0LnNwbGl0KFwiXCIpO1xuICAgIGxldCB0ZW1wID0gcmVzdWx0LnNwbGljZSg2LCAxKTtcbiAgICByZXN1bHQgPSByZXN1bHQuam9pbihcIlwiKTtcbiAgfVxuICBpZiAocmVzdWx0KSBkYWlseURhdGVIb2xkZXIuaW5uZXJIVE1MID0gcmVzdWx0O1xuXG4gIGxldCBkYWlseUNvbmRpdGlvbkljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICBkYWlseUNvbmRpdGlvbkljb24uY2xhc3NMaXN0LmFkZChcImRhaWx5Q29uZGl0aW9uSWNvblwiKTtcbiAgZGFpbHlDb25kaXRpb25JY29uLnNldEF0dHJpYnV0ZShcInNyY1wiLCBjb25kaXRpb25faWNvbik7XG4gIGRhaWx5Q29uZGl0aW9uSWNvbi5zZXRBdHRyaWJ1dGUoXCJhbHRcIiwgXCJXZWF0aGVyIENvbmRpdGlvbiBJY29uXCIpO1xuXG4gIGxldCBkYWlseUNvbmRpdGlvblRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgZGFpbHlDb25kaXRpb25UZXh0LmNsYXNzTGlzdC5hZGQoXCJkYWlseUNvbmRpdGlvblRleHRcIik7XG4gIGRhaWx5Q29uZGl0aW9uVGV4dC5pbm5lckhUTUwgPSBjb25kaXRpb25UZXh0O1xuXG4gIGxldCBkYWlseVRlbXBlcmF0dXJlSG9sZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgyXCIpO1xuICBkYWlseVRlbXBlcmF0dXJlSG9sZGVyLmNsYXNzTGlzdC5hZGQoXCJkYWlseVRlbXBlcmF0dXJlSG9sZGVyXCIpO1xuICBsZXQgbW9yZVRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgbW9yZVRleHQuY2xhc3NMaXN0LmFkZChcIm1vcmVUZXh0XCIpO1xuICBtb3JlVGV4dC5pbm5lckhUTUwgPSBcIkF2ZyB0ZW1wOiBcIiArIFwiPGJyPlwiO1xuICBkYWlseVRlbXBlcmF0dXJlSG9sZGVyLmlubmVySFRNTCA9IHRlbXAgKyBcIiDCsENcIjtcblxuICBsZXQgQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJkYWlseUNvbnRhaW5lclwiKTtcbiAgQ29udGFpbmVyLmFwcGVuZENoaWxkKGRhaWx5Q29uZGl0aW9uSWNvbik7XG4gIENvbnRhaW5lci5hcHBlbmRDaGlsZChkYWlseUNvbmRpdGlvblRleHQpO1xuICBDb250YWluZXIuYXBwZW5kQ2hpbGQoZGFpbHlEYXRlSG9sZGVyKTtcbiAgQ29udGFpbmVyLmFwcGVuZENoaWxkKG1vcmVUZXh0KTtcbiAgQ29udGFpbmVyLmFwcGVuZENoaWxkKGRhaWx5VGVtcGVyYXR1cmVIb2xkZXIpO1xuXG4gIGRhaWx5RGF0YUNvbnRhaW5lci5hcHBlbmRDaGlsZChDb250YWluZXIpO1xufVxuXG5mdW5jdGlvbiBob3VybHkoZGF0ZSwgY29uZGl0aW9uX2ljb24sIHRlbXAsIGNvbmRpdGlvblRleHQpIHtcbiAgbGV0IGhvdXJseURhdGFDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRhdGEtYmFyXCIpO1xuXG4gIGxldCBob3VybHlEYXRlSG9sZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIGhvdXJseURhdGVIb2xkZXIuY2xhc3NMaXN0LmFkZChcImhvdXJseURhdGVIb2xkZXJcIik7XG4gIGxldCBjdXRZZWFyID0gZGF0ZS5zcGxpdChcIi1cIikuc2xpY2UoMSwgMyk7XG4gIGxldCByZXN1bHQgPSBjdXRZZWFyLmpvaW4oXCIvXCIpO1xuICBpZiAocmVzdWx0LnNwbGl0KFwiXCIpWzZdID09IDApIHtcbiAgICByZXN1bHQgPSByZXN1bHQuc3BsaXQoXCJcIik7XG4gICAgbGV0IHRlbXAgPSByZXN1bHQuc3BsaWNlKDYsIDEpO1xuICAgIHJlc3VsdCA9IHJlc3VsdC5qb2luKFwiXCIpO1xuICB9XG4gIGlmIChyZXN1bHQpIGhvdXJseURhdGVIb2xkZXIuaW5uZXJIVE1MID0gcmVzdWx0O1xuXG4gIGxldCBob3VybHlDb25kaXRpb25JY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgaG91cmx5Q29uZGl0aW9uSWNvbi5jbGFzc0xpc3QuYWRkKFwiaG91cmx5Q29uZGl0aW9uSWNvblwiKTtcbiAgaG91cmx5Q29uZGl0aW9uSWNvbi5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgY29uZGl0aW9uX2ljb24pO1xuICBob3VybHlDb25kaXRpb25JY29uLnNldEF0dHJpYnV0ZShcImFsdFwiLCBcIldlYXRoZXIgQ29uZGl0aW9uIEljb25cIik7XG5cbiAgbGV0IGhvdXJseUNvbmRpdGlvblRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgaG91cmx5Q29uZGl0aW9uVGV4dC5jbGFzc0xpc3QuYWRkKFwiaG91cmx5Q29uZGl0aW9uVGV4dFwiKTtcbiAgaG91cmx5Q29uZGl0aW9uVGV4dC5pbm5lckhUTUwgPSBjb25kaXRpb25UZXh0O1xuXG4gIGxldCBob3VybHlUZW1wZXJhdHVyZUhvbGRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMlwiKTtcbiAgaG91cmx5VGVtcGVyYXR1cmVIb2xkZXIuY2xhc3NMaXN0LmFkZChcImhvdXJseVRlbXBlcmF0dXJlSG9sZGVyXCIpO1xuICBob3VybHlUZW1wZXJhdHVyZUhvbGRlci5pbm5lckhUTUwgPSB0ZW1wICsgXCIgwrBDXCI7XG5cbiAgbGV0IENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiaG91cmx5Q29udGFpbmVyXCIpO1xuICBDb250YWluZXIuYXBwZW5kQ2hpbGQoaG91cmx5Q29uZGl0aW9uSWNvbik7XG4gIENvbnRhaW5lci5hcHBlbmRDaGlsZChob3VybHlDb25kaXRpb25UZXh0KTtcbiAgQ29udGFpbmVyLmFwcGVuZENoaWxkKGhvdXJseURhdGVIb2xkZXIpO1xuICBDb250YWluZXIuYXBwZW5kQ2hpbGQoaG91cmx5VGVtcGVyYXR1cmVIb2xkZXIpO1xuXG4gIGhvdXJseURhdGFDb250YWluZXIuYXBwZW5kQ2hpbGQoQ29udGFpbmVyKTtcbn1cblxuZnVuY3Rpb24gZGF0YUJhclNjcm9sbCgpIHtcbiAgY29uc3Qgc2Nyb2xsQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYXRhLWJhclwiKTtcblxuICBzY3JvbGxDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcIndoZWVsXCIsIChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgc2Nyb2xsQ29udGFpbmVyLnNjcm9sbEJ5KHtcbiAgICAgIGxlZnQ6IGV2ZW50LmRlbHRhWSA8IDAgPyAtMzAgOiAzMCxcbiAgICB9KTtcbiAgfSk7XG59XG5kYXRhQmFyU2Nyb2xsKCk7XG5cbmZ1bmN0aW9uIGRhaWx5Q29udmVydGVyRihkYWlseUZvcmVjYXN0KSB7XG4gIGNvbnN0IHRlbXBlcmF0dXJlVG9GID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcbiAgICBcImRhaWx5VGVtcGVyYXR1cmVIb2xkZXJcIlxuICApO1xuICBpZiAodGVtcGVyYXR1cmVUb0ZbMF0pIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IE9iamVjdC5rZXlzKGRhaWx5Rm9yZWNhc3QpLmxlbmd0aDsgaSsrKSB7XG4gICAgICBsZXQgdGVtcGVyYXR1cmVOb3cgPSBkYWlseUZvcmVjYXN0W1wiZGF5XCIgKyBpXS5hdmdfdGVtcEY7XG4gICAgICB0ZW1wZXJhdHVyZVRvRltpXS5pbm5lckhUTUwgPSB0ZW1wZXJhdHVyZU5vdyArIFwiIMKwRlwiO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gZGFpbHlDb252ZXJ0ZXJDKGRhaWx5Rm9yZWNhc3QpIHtcbiAgY29uc3QgdGVtcGVyYXR1cmVUb0MgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxuICAgIFwiZGFpbHlUZW1wZXJhdHVyZUhvbGRlclwiXG4gICk7XG4gIGlmICh0ZW1wZXJhdHVyZVRvQ1swXSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgT2JqZWN0LmtleXMoZGFpbHlGb3JlY2FzdCkubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxldCB0ZW1wZXJhdHVyZU5vdyA9IGRhaWx5Rm9yZWNhc3RbXCJkYXlcIiArIGldLmF2Z190ZW1wQztcbiAgICAgIHRlbXBlcmF0dXJlVG9DW2ldLmlubmVySFRNTCA9IHRlbXBlcmF0dXJlTm93ICsgXCIgwrBDXCI7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGhvdXJseUNvbnZlcnRlckYoaG91cmx5Rm9yZWNhc3QpIHtcbiAgY29uc3QgdGVtcGVyYXR1cmVUb0ZIb3VybHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxuICAgIFwiaG91cmx5VGVtcGVyYXR1cmVIb2xkZXJcIlxuICApO1xuICBpZiAodGVtcGVyYXR1cmVUb0ZIb3VybHlbMF0pIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IE9iamVjdC5rZXlzKGhvdXJseUZvcmVjYXN0KS5sZW5ndGg7IGkrKykge1xuICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCAyNDsgaysrKSB7XG4gICAgICAgIGxldCB0ZW1wZXJhdHVyZSA9XG4gICAgICAgICAgaG91cmx5Rm9yZWNhc3RbXCJkYXlcIiArIGldLmhvdXJbXCJob3VyXCIgKyBrXS50ZW1wZXJhdHVyZUY7XG4gICAgICAgIGlmIChpID09IDApIHtcbiAgICAgICAgICB0ZW1wZXJhdHVyZVRvRkhvdXJseVtrXS5pbm5lckhUTUwgPSB0ZW1wZXJhdHVyZSArIFwiIMKwRlwiO1xuICAgICAgICB9IGVsc2UgaWYgKGkgPT0gMSkge1xuICAgICAgICAgIHRlbXBlcmF0dXJlVG9GSG91cmx5WzI0ICsga10uaW5uZXJIVE1MID0gdGVtcGVyYXR1cmUgKyBcIiDCsEZcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0ZW1wZXJhdHVyZVRvRkhvdXJseVs0OCArIGtdLmlubmVySFRNTCA9IHRlbXBlcmF0dXJlICsgXCIgwrBGXCI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaG91cmx5Q29udmVydGVyQyhob3VybHlGb3JlY2FzdCkge1xuICBjb25zdCB0ZW1wZXJhdHVyZVRvQ0hvdXJseSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXG4gICAgXCJob3VybHlUZW1wZXJhdHVyZUhvbGRlclwiXG4gICk7XG4gIGlmICh0ZW1wZXJhdHVyZVRvQ0hvdXJseVswXSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgT2JqZWN0LmtleXMoaG91cmx5Rm9yZWNhc3QpLmxlbmd0aDsgaSsrKSB7XG4gICAgICBmb3IgKGxldCBrID0gMDsgayA8IDI0OyBrKyspIHtcbiAgICAgICAgbGV0IHRlbXBlcmF0dXJlID1cbiAgICAgICAgICBob3VybHlGb3JlY2FzdFtcImRheVwiICsgaV0uaG91cltcImhvdXJcIiArIGtdLnRlbXBlcmF0dXJlQztcbiAgICAgICAgaWYgKGkgPT0gMCkge1xuICAgICAgICAgIHRlbXBlcmF0dXJlVG9DSG91cmx5W2tdLmlubmVySFRNTCA9IHRlbXBlcmF0dXJlICsgXCIgwrBDXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaSA9PSAxKSB7XG4gICAgICAgICAgdGVtcGVyYXR1cmVUb0NIb3VybHlbMjQgKyBrXS5pbm5lckhUTUwgPSB0ZW1wZXJhdHVyZSArIFwiIMKwQ1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRlbXBlcmF0dXJlVG9DSG91cmx5WzQ4ICsga10uaW5uZXJIVE1MID0gdGVtcGVyYXR1cmUgKyBcIiDCsENcIjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gZGF0YUJhclNsaWRlcigpIHtcbiAgY29uc3Qgc2xpZGluZ0NvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGF0YS1iYXJcIik7XG4gIGxldCBpc01vdXNlRG93biA9IGZhbHNlO1xuICBsZXQgc3RhcnRYID0gMDtcblxuICBzbGlkaW5nQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGUpID0+IHtcbiAgICBpc01vdXNlRG93biA9IHRydWU7XG4gICAgc3RhcnRYID0gZS5wYWdlWDtcbiAgfSk7XG5cbiAgc2xpZGluZ0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIChlKSA9PiB7XG4gICAgaWYgKCFpc01vdXNlRG93bikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgY3VycmVudFggPSBlLnBhZ2VYO1xuICAgIGNvbnN0IGRpc3RhbmNlID0gc3RhcnRYIC0gY3VycmVudFg7XG4gICAgc2xpZGluZ0NvbnRhaW5lci5zY3JvbGxMZWZ0ICs9IGRpc3RhbmNlO1xuICAgIHN0YXJ0WCA9IGN1cnJlbnRYO1xuICB9KTtcblxuICBzbGlkaW5nQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIChlKSA9PiB7XG4gICAgaXNNb3VzZURvd24gPSBmYWxzZTtcbiAgICBzdGFydFggPSAwO1xuICB9KTtcbiAgc2xpZGluZ0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCAoZSkgPT4ge1xuICAgIHN0YXJ0WCA9IGUudG91Y2hlc1swXS5wYWdlWDtcbiAgfSk7XG5cbiAgc2xpZGluZ0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsIChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IGN1cnJlbnRYID0gZS50b3VjaGVzWzBdLnBhZ2VYO1xuICAgIGNvbnN0IGRpc3RhbmNlID0gKHN0YXJ0WCAtIGN1cnJlbnRYKSAqIDAuNTtcbiAgICBzbGlkaW5nQ29udGFpbmVyLnNjcm9sbExlZnQgKz0gZGlzdGFuY2U7XG4gIH0pO1xuXG4gIHNsaWRpbmdDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIChlKSA9PiB7XG4gICAgc3RhcnRYID0gMDtcbiAgfSk7XG59XG5kYXRhQmFyU2xpZGVyKCk7XG5cbmZ1bmN0aW9uIGFycm93c0Z1bmN0aW9uYWxpdHkoKSB7XG4gIGNvbnN0IHNsaWRpbmdDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRhdGEtYmFyXCIpO1xuICBjb25zdCBsZWZ0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImxlZnRBcnJvd1wiKVswXTtcbiAgY29uc3QgcmlnaHRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwicmlnaHRBcnJvd1wiKVswXTtcbiAgY29uc3QgZWxlbWVudFdpZHRoID1cbiAgICBzbGlkaW5nQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoXCIuZGFpbHlDb250YWluZXJcIikub2Zmc2V0V2lkdGg7XG4gIGNvbnNvbGUubG9nKGVsZW1lbnRXaWR0aCk7XG4gIGxlZnRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBzbGlkaW5nQ29udGFpbmVyLnNjcm9sbExlZnQgLT0gMyAqIGVsZW1lbnRXaWR0aDtcbiAgfSk7XG5cbiAgcmlnaHRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBzbGlkaW5nQ29udGFpbmVyLnNjcm9sbExlZnQgKz0gMyAqIGVsZW1lbnRXaWR0aDtcbiAgfSk7XG59XG5cbmV4cG9ydCB7XG4gIGRhaWx5LFxuICBob3VybHksXG4gIGRhaWx5Q29udmVydGVyRixcbiAgZGFpbHlDb252ZXJ0ZXJDLFxuICBob3VybHlDb252ZXJ0ZXJGLFxuICBob3VybHlDb252ZXJ0ZXJDLFxuICBhcnJvd3NGdW5jdGlvbmFsaXR5LFxufTtcbiIsImltcG9ydCB7IGNoYW5jZU9mUmFpbiwgY2hhbmNlT2ZTbm93IH0gZnJvbSBcIi4vd2VhdGhlckNoYW5jZVwiO1xuXG5mdW5jdGlvbiBiYXNpY0RhdGEoY2l0eSwgY291bnRyeSwgdGltZSwgY29uZGl0aW9uSWNvbiwgY29uZGl0aW9uLCB0ZW1wZXJhdHVyZSkge1xuICBjb25zdCBkYXRhSG9sZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYXNpYy1kYXRhXCIpO1xuXG4gIGxldCBjaXR5Q291bnRyeU5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDJcIik7XG4gIGNpdHlDb3VudHJ5TmFtZS5jbGFzc0xpc3QuYWRkKFwiY2l0eUNvdW50cnlOYW1lTmFtZVwiKTtcbiAgY2l0eUNvdW50cnlOYW1lLmlubmVySFRNTCA9IGNpdHkgKyBcIiwgXCIgKyBjb3VudHJ5O1xuXG4gIGxldCB0aW1lRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICB0aW1lRGF0ZS5jbGFzc0xpc3QuYWRkKFwidGltZURhdGVcIik7XG4gIHRpbWVEYXRlLmlubmVySFRNTCA9IHRpbWU7XG5cbiAgbGV0IGNvbmRpdGlvbkNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbmRpdGlvbkNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiY29uZGl0aW9uQ29udGFpbmVyXCIpO1xuXG4gIGxldCBjb25kaXRpb25JY29uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgY29uZGl0aW9uSWNvbkNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgY29uZGl0aW9uSWNvbik7XG4gIGNvbmRpdGlvbkljb25Db250YWluZXIuc2V0QXR0cmlidXRlKFwiYWx0XCIsIFwiV2VhdGhlciBDb25kaXRpb24gSWNvblwiKTtcblxuICBsZXQgd2VhdGhlckNvbmRpdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMlwiKTtcbiAgd2VhdGhlckNvbmRpdGlvbi5jbGFzc0xpc3QuYWRkKFwid2hldGhlckNvbmRpdGlvblwiKTtcbiAgd2VhdGhlckNvbmRpdGlvbi5pbm5lckhUTUwgPSBjb25kaXRpb247XG4gIGNvbmRpdGlvbkNvbnRhaW5lci5hcHBlbmRDaGlsZCh3ZWF0aGVyQ29uZGl0aW9uKTtcbiAgY29uZGl0aW9uQ29udGFpbmVyLmFwcGVuZENoaWxkKGNvbmRpdGlvbkljb25Db250YWluZXIpO1xuXG4gIGxldCBjdXJyZW50VGVtcGVyYXR1cmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG4gIGN1cnJlbnRUZW1wZXJhdHVyZS5jbGFzc0xpc3QuYWRkKFwiY3VycmVudFRlbXBlcmF0dXJlXCIpO1xuICBjdXJyZW50VGVtcGVyYXR1cmUuaW5uZXJIVE1MID0gdGVtcGVyYXR1cmUgKyBcIiDCsENcIjtcblxuICBpZiAoZGF0YUhvbGRlci5jaGlsZE5vZGVzLmxlbmd0aCA9PSAwKSB7XG4gICAgZGF0YUhvbGRlci5hcHBlbmRDaGlsZChjaXR5Q291bnRyeU5hbWUpO1xuICAgIGRhdGFIb2xkZXIuYXBwZW5kQ2hpbGQodGltZURhdGUpO1xuICAgIGRhdGFIb2xkZXIuYXBwZW5kQ2hpbGQoY29uZGl0aW9uQ29udGFpbmVyKTtcbiAgICBkYXRhSG9sZGVyLmFwcGVuZENoaWxkKGN1cnJlbnRUZW1wZXJhdHVyZSk7XG4gIH0gZWxzZSB7XG4gICAgZGF0YUhvbGRlci5yZXBsYWNlQ2hpbGQoY2l0eUNvdW50cnlOYW1lLCBkYXRhSG9sZGVyLmNoaWxkcmVuWzBdKTtcbiAgICBkYXRhSG9sZGVyLnJlcGxhY2VDaGlsZCh0aW1lRGF0ZSwgZGF0YUhvbGRlci5jaGlsZHJlblsxXSk7XG4gICAgZGF0YUhvbGRlci5yZXBsYWNlQ2hpbGQoY29uZGl0aW9uQ29udGFpbmVyLCBkYXRhSG9sZGVyLmNoaWxkcmVuWzJdKTtcbiAgICBkYXRhSG9sZGVyLnJlcGxhY2VDaGlsZChjdXJyZW50VGVtcGVyYXR1cmUsIGRhdGFIb2xkZXIuY2hpbGRyZW5bM10pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFkZGl0aW9uYWxEYXRhKFxuICBodW1pZGl0eSxcbiAgZmVlbHNsaWtlLFxuICB3aW5kc3BlZWQsXG4gIHN1bnJpc2UsXG4gIHN1bnNldCxcbiAgbG9jYWxfdGltZSxcbiAgaG91cmx5Rm9yZWNhc3REYXRhXG4pIHtcbiAgY29uc3QgYWRkaXRpb25hbERhdGFIb2xkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkZGl0aW9uYWwtZGF0YVwiKTtcblxuICBsZXQgaHVtaWRpdHlEYXRhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIGh1bWlkaXR5RGF0YS5jbGFzc0xpc3QuYWRkKFwiaHVtaWRpdHlEYXRhXCIpO1xuICBodW1pZGl0eURhdGEuaW5uZXJIVE1MID0gXCJIdW1pZGl0eVwiICsgXCI8YnI+XCIgKyBodW1pZGl0eSArIFwiICVcIjtcblxuICBsZXQgZmVlbHNsaWtlRGF0YSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICBmZWVsc2xpa2VEYXRhLmNsYXNzTGlzdC5hZGQoXCJmZWVsc2xpa2VEYXRhXCIpO1xuICBmZWVsc2xpa2VEYXRhLmlubmVySFRNTCA9IFwiRmVlbHMgTGlrZVwiICsgXCI8YnI+XCIgKyBmZWVsc2xpa2UgKyBcIiDCsENcIjtcblxuICBsZXQgd2luZHNwZWVkRGF0YSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICB3aW5kc3BlZWREYXRhLmNsYXNzTGlzdC5hZGQoXCJ3aW5kc3BlZWREYXRhXCIpO1xuICB3aW5kc3BlZWREYXRhLmlubmVySFRNTCA9IFwiV2luZCBTcGVlZFwiICsgXCI8YnI+XCIgKyB3aW5kc3BlZWQgKyBcIiBrcGhcIjtcblxuICBsZXQgY2hhbmNlUmFpbkRhdGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgY2hhbmNlUmFpbkRhdGEuY2xhc3NMaXN0LmFkZChcImNoYW5jZVJhaW5EYXRhXCIpO1xuICBjaGFuY2VSYWluRGF0YS5pbm5lckhUTUwgPVxuICAgIFwiQ2hhbmNlIE9mIFJhaW5cIiArXG4gICAgXCI8YnI+XCIgK1xuICAgIGNoYW5jZU9mUmFpbihob3VybHlGb3JlY2FzdERhdGEsIGxvY2FsX3RpbWUpICtcbiAgICBcIiAlXCI7XG5cbiAgLy8gbGV0IGNoYW5jZVNub3dEYXRhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIC8vIGNoYW5jZVNub3dEYXRhLmNsYXNzTGlzdC5hZGQoXCJjaGFuY2VTbm93RGF0YVwiKTtcbiAgLy8gY2hhbmNlU25vd0RhdGEuaW5uZXJIVE1MID1cbiAgLy8gICBcIkNoYW5jZSBPZiBTbm93XCIgKyBcIjxicj5cIiArIGNoYW5jZU9mU25vdyhob3VybHlGb3JlY2FzdERhdGEsIGxvY2FsX3RpbWUpICsgXCIgJVwiO1xuXG4gIGlmIChzdW5yaXNlWzBdID09IDApIHtcbiAgICBzdW5yaXNlID0gc3VucmlzZS5zcGxpdChcIlwiKTtcbiAgICBzdW5yaXNlLnNoaWZ0KCk7XG4gICAgc3VucmlzZSA9IHN1bnJpc2Uuam9pbihcIlwiKTtcbiAgfVxuICBsZXQgc3VucmlzZURhdGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgc3VucmlzZURhdGEuY2xhc3NMaXN0LmFkZChcInN1bnJpc2VEYXRhXCIpO1xuICBzdW5yaXNlRGF0YS5pbm5lckhUTUwgPSBcIlN1bnJpc2VcIiArIFwiPGJyPlwiICsgc3VucmlzZTtcblxuICBpZiAoc3Vuc2V0WzBdID09IDApIHtcbiAgICBzdW5zZXQgPSBzdW5zZXQuc3BsaXQoXCJcIik7XG4gICAgc3Vuc2V0LnNoaWZ0KCk7XG4gICAgc3Vuc2V0ID0gc3Vuc2V0LmpvaW4oXCJcIik7XG4gIH1cbiAgbGV0IHN1bnNldERhdGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgc3Vuc2V0RGF0YS5jbGFzc0xpc3QuYWRkKFwic3Vuc2V0RGF0YVwiKTtcbiAgc3Vuc2V0RGF0YS5pbm5lckhUTUwgPSBcIlN1bnNldFwiICsgXCI8YnI+XCIgKyBzdW5zZXQ7XG5cbiAgaWYgKGFkZGl0aW9uYWxEYXRhSG9sZGVyLmNoaWxkTm9kZXMubGVuZ3RoID09IDApIHtcbiAgICBhZGRpdGlvbmFsRGF0YUhvbGRlci5hcHBlbmRDaGlsZChodW1pZGl0eURhdGEpO1xuICAgIGFkZGl0aW9uYWxEYXRhSG9sZGVyLmFwcGVuZENoaWxkKGZlZWxzbGlrZURhdGEpO1xuICAgIGFkZGl0aW9uYWxEYXRhSG9sZGVyLmFwcGVuZENoaWxkKHdpbmRzcGVlZERhdGEpO1xuICAgIGFkZGl0aW9uYWxEYXRhSG9sZGVyLmFwcGVuZENoaWxkKHN1bnJpc2VEYXRhKTtcbiAgICBhZGRpdGlvbmFsRGF0YUhvbGRlci5hcHBlbmRDaGlsZChzdW5zZXREYXRhKTtcbiAgICBhZGRpdGlvbmFsRGF0YUhvbGRlci5hcHBlbmRDaGlsZChjaGFuY2VSYWluRGF0YSk7XG4gICAgLy8gYWRkaXRpb25hbERhdGFIb2xkZXIuYXBwZW5kQ2hpbGQoY2hhbmNlU25vd0RhdGEpO1xuICB9IGVsc2Uge1xuICAgIGFkZGl0aW9uYWxEYXRhSG9sZGVyLnJlcGxhY2VDaGlsZChcbiAgICAgIGh1bWlkaXR5RGF0YSxcbiAgICAgIGFkZGl0aW9uYWxEYXRhSG9sZGVyLmNoaWxkcmVuWzBdXG4gICAgKTtcbiAgICBhZGRpdGlvbmFsRGF0YUhvbGRlci5yZXBsYWNlQ2hpbGQoXG4gICAgICBmZWVsc2xpa2VEYXRhLFxuICAgICAgYWRkaXRpb25hbERhdGFIb2xkZXIuY2hpbGRyZW5bMV1cbiAgICApO1xuICAgIGFkZGl0aW9uYWxEYXRhSG9sZGVyLnJlcGxhY2VDaGlsZChcbiAgICAgIHdpbmRzcGVlZERhdGEsXG4gICAgICBhZGRpdGlvbmFsRGF0YUhvbGRlci5jaGlsZHJlblsyXVxuICAgICk7XG4gICAgYWRkaXRpb25hbERhdGFIb2xkZXIucmVwbGFjZUNoaWxkKFxuICAgICAgc3VucmlzZURhdGEsXG4gICAgICBhZGRpdGlvbmFsRGF0YUhvbGRlci5jaGlsZHJlblszXVxuICAgICk7XG4gICAgYWRkaXRpb25hbERhdGFIb2xkZXIucmVwbGFjZUNoaWxkKFxuICAgICAgc3Vuc2V0RGF0YSxcbiAgICAgIGFkZGl0aW9uYWxEYXRhSG9sZGVyLmNoaWxkcmVuWzRdXG4gICAgKTtcbiAgICBhZGRpdGlvbmFsRGF0YUhvbGRlci5yZXBsYWNlQ2hpbGQoXG4gICAgICBjaGFuY2VSYWluRGF0YSxcbiAgICAgIGFkZGl0aW9uYWxEYXRhSG9sZGVyLmNoaWxkcmVuWzVdXG4gICAgKTtcbiAgICAvLyBhZGRpdGlvbmFsRGF0YUhvbGRlci5yZXBsYWNlQ2hpbGQoXG4gICAgLy8gICBjaGFuY2VTbm93RGF0YSxcbiAgICAvLyAgIGFkZGl0aW9uYWxEYXRhSG9sZGVyLmNoaWxkcmVuWzZdXG4gICAgLy8gKTtcbiAgfVxufVxuZnVuY3Rpb24gZXJyb3JNc2coKSB7XG4gIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiZm9ybVwiKVswXTtcbiAgaWYgKGZvcm0uY2hpbGROb2Rlcy5sZW5ndGggPT0gMikge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB3cm9uZ0lucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgd3JvbmdJbnB1dC5jbGFzc0xpc3QuYWRkKFwid3JvbmdJbnB1dFwiKTtcbiAgd3JvbmdJbnB1dC5pbm5lckhUTUwgPVxuICAgICdMb2NhdGlvbiBub3QgZm91bmQuIFRyeSBcIkNpdHlcIiwgXCJDaXR5LCBTdGF0ZVwiIG9yIFwiQ2l0eSwgQ291bnRyeVwiLic7XG4gIGZvcm0uYXBwZW5kQ2hpbGQod3JvbmdJbnB1dCk7XG59XG5mdW5jdGlvbiBlcnJvckNsZWFuKCkge1xuICBjb25zdCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImZvcm1cIilbMF07XG4gIGlmIChmb3JtLmNoaWxkTm9kZXMubGVuZ3RoID09IDIpIHtcbiAgICBmb3JtLmxhc3RDaGlsZC5yZW1vdmUoKTtcbiAgfVxufVxuZnVuY3Rpb24gY29udmVydFRvRmFocmVuaGVpdCgpIHtcbiAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYXNpYy1kYXRhXCIpO1xuICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBidXR0b24uY2xhc3NMaXN0LmFkZChcImNvbnZlcnRUb0ZhaHJlbmhlaXRcIik7XG4gIGJ1dHRvbi5pbm5lckhUTUwgPSBcIkNvbnZlcnQgdG8gwrBGXCI7XG4gIGlmIChcbiAgICBjb250YWluZXIuY29udGFpbnMoXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY29udmVydEJ1dHRvbkNvbnRhaW5lclwiKVswXVxuICAgIClcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnRhaW5lci5hcHBlbmRDaGlsZChidXR0b24pO1xuICByZXR1cm4gYnV0dG9uO1xufVxuZnVuY3Rpb24gY29udmVydFRvQ2Vsc2l1cygpIHtcbiAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYXNpYy1kYXRhXCIpO1xuICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBidXR0b24uY2xhc3NMaXN0LmFkZChcImNvbnZlcnRUb0NlbHNpdXNcIik7XG4gIGJ1dHRvbi5pbm5lckhUTUwgPSBcIkNvbnZlcnQgdG8gwrBDXCI7XG4gIGlmIChcbiAgICBjb250YWluZXIuY29udGFpbnMoXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY29udmVydEJ1dHRvbkNvbnRhaW5lclwiKVswXVxuICAgIClcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnRhaW5lci5hcHBlbmRDaGlsZChidXR0b24pO1xuICByZXR1cm4gYnV0dG9uO1xufVxuXG5mdW5jdGlvbiBtYWluQ29udmVydGVyRih0ZW1wRiwgZmVlbHNsaWtlRiwgd2luZHNwZWVkTSkge1xuICBjb25zdCB0ZW1wZXJhdHVyZVRvRiA9XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImN1cnJlbnRUZW1wZXJhdHVyZVwiKVswXTtcbiAgdGVtcGVyYXR1cmVUb0YuaW5uZXJIVE1MID0gdGVtcEYgKyBcIiDCsEZcIjtcbiAgY29uc3QgZmVlbHNsaWtlVG9GID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImZlZWxzbGlrZURhdGFcIilbMF07XG4gIGZlZWxzbGlrZVRvRi5pbm5lckhUTUwgPSBcIkZlZWxzIExpa2VcIiArIFwiPGJyPlwiICsgZmVlbHNsaWtlRiArIFwiIMKwRlwiO1xuICBjb25zdCB3aW5kc3BlZWRUb00gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwid2luZHNwZWVkRGF0YVwiKVswXTtcbiAgd2luZHNwZWVkVG9NLmlubmVySFRNTCA9IFwiV2luZCBTcGVlZFwiICsgXCI8YnI+XCIgKyB3aW5kc3BlZWRNICsgXCIgbXBoXCI7XG59XG5mdW5jdGlvbiBtYWluQ29udmVydGVyQyh0ZW1wQywgZmVlbHNsaWtlQywgd2luZHNwZWVkSykge1xuICBjb25zdCB0ZW1wZXJhdHVyZVRvQyA9XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImN1cnJlbnRUZW1wZXJhdHVyZVwiKVswXTtcbiAgdGVtcGVyYXR1cmVUb0MuaW5uZXJIVE1MID0gdGVtcEMgKyBcIiDCsENcIjtcbiAgY29uc3QgZmVlbHNsaWtlVG9DID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImZlZWxzbGlrZURhdGFcIilbMF07XG4gIGZlZWxzbGlrZVRvQy5pbm5lckhUTUwgPSBcIkZlZWxzIExpa2VcIiArIFwiPGJyPlwiICsgZmVlbHNsaWtlQyArIFwiIMKwQ1wiO1xuICBjb25zdCB3aW5kc3BlZWRUb0sgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwid2luZHNwZWVkRGF0YVwiKVswXTtcbiAgd2luZHNwZWVkVG9LLmlubmVySFRNTCA9IFwiV2luZCBTcGVlZFwiICsgXCI8YnI+XCIgKyB3aW5kc3BlZWRLICsgXCIga3BoXCI7XG59XG5cbmV4cG9ydCB7XG4gIGJhc2ljRGF0YSxcbiAgYWRkaXRpb25hbERhdGEsXG4gIGVycm9yTXNnLFxuICBlcnJvckNsZWFuLFxuICBjb252ZXJ0VG9DZWxzaXVzLFxuICBjb252ZXJ0VG9GYWhyZW5oZWl0LFxuICBtYWluQ29udmVydGVyRixcbiAgbWFpbkNvbnZlcnRlckMsXG59O1xuIiwiZXhwb3J0IGNvbnN0IEtleSA9IFwiZjA2ZDIzZDYyMWM3NDhmMWFlZDk0MjU5MjMyMDA0XCI7XG4iLCIvL1JldHVybmluZyBjaGFuY2Ugb2YgcmFpbiBmb3IgdGhlIHJlc3Qgb2YgdGhlIGRheSBsb2NhbCBkYXRlIHRvIG1pZG5pZ2h0XG5mdW5jdGlvbiBjaGFuY2VPZlJhaW4oaG91cmx5Rm9yZWNhc3REYXRhLCBsb2NhbF90aW1lKSB7XG4gIGxldCBjaGFuY2VPZlJhaW5jb3VudGVyID0gMDtcbiAgbGV0IGNvdW50ZXIgPSAwO1xuICBsZXQgY2hhbmNlQXJyYXkgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBPYmplY3Qua2V5cyhob3VybHlGb3JlY2FzdERhdGEuZGF5MC5ob3VyKS5sZW5ndGg7IGkrKykge1xuICAgIGxldCB0aW1lU2xpY2VyID0gaG91cmx5Rm9yZWNhc3REYXRhLmRheTAuaG91cltgaG91ciR7aX1gXS50aW1lO1xuICAgIGlmIChuZXcgRGF0ZSh0aW1lU2xpY2VyKS5nZXRUaW1lKCkgPiBuZXcgRGF0ZShsb2NhbF90aW1lKS5nZXRUaW1lKCkpIHtcbiAgICAgIGlmIChob3VybHlGb3JlY2FzdERhdGEuZGF5MC5ob3VyW2Bob3VyJHtpfWBdLmNoYW5jZV9vZl9yYWluID4gMCkge1xuICAgICAgICBjb3VudGVyICs9IDE7XG4gICAgICAgIGlmIChjb3VudGVyID4gMSkge1xuICAgICAgICAgIGNoYW5jZUFycmF5WzFdID1cbiAgICAgICAgICAgIGhvdXJseUZvcmVjYXN0RGF0YS5kYXkwLmhvdXJbYGhvdXIke2l9YF0uY2hhbmNlX29mX3JhaW47XG4gICAgICAgICAgbGV0IGluaXRpYWxDaGFuY2UgPSBjaGFuY2VBcnJheVswXSAvIDEwMDtcbiAgICAgICAgICBsZXQgaW5jcmVhc2UgPVxuICAgICAgICAgICAgaW5pdGlhbENoYW5jZSArIChjaGFuY2VBcnJheVsxXSAvIDEwMCkgKiAoMSAtIGluaXRpYWxDaGFuY2UpO1xuICAgICAgICAgIGNoYW5jZUFycmF5WzBdID0gaW5jcmVhc2UgKiAxMDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmNlQXJyYXkucHVzaChcbiAgICAgICAgICAgIGhvdXJseUZvcmVjYXN0RGF0YS5kYXkwLmhvdXJbYGhvdXIke2l9YF0uY2hhbmNlX29mX3JhaW5cbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIGNoYW5jZU9mUmFpbmNvdW50ZXIgKz1cbiAgICAgICAgICBob3VybHlGb3JlY2FzdERhdGEuZGF5MC5ob3VyW2Bob3VyJHtpfWBdLmNoYW5jZV9vZl9yYWluO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBpZiAoY291bnRlciA9PSAwKSB7XG4gICAgcmV0dXJuIDA7XG4gIH0gZWxzZSBpZiAoY291bnRlciA9PSAxKSB7XG4gICAgcmV0dXJuIGNoYW5jZU9mUmFpbmNvdW50ZXI7XG4gIH1cblxuICByZXR1cm4gTWF0aC5yb3VuZChjaGFuY2VBcnJheVswXSAqIDEwMCkgLyAxMDA7XG59XG5cbi8vUmV0dXJuaW5nIGNoYW5jZSBvZiBzbm93IGZvciB0aGUgcmVzdCBvZiB0aGUgZGF5IGxvY2FsIGRhdGUgdG8gbWlkbmlnaHRcbmZ1bmN0aW9uIGNoYW5jZU9mU25vdyhob3VybHlGb3JlY2FzdERhdGEsIGxvY2FsX3RpbWUpIHtcbiAgbGV0IGNoYW5jZU9mU25vd2NvdW50ZXIgPSAwO1xuICBsZXQgY291bnRlciA9IDA7XG4gIGxldCBjaGFuY2VBcnJheSA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IE9iamVjdC5rZXlzKGhvdXJseUZvcmVjYXN0RGF0YS5kYXkwLmhvdXIpLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IHRpbWVTbGljZXIgPSBob3VybHlGb3JlY2FzdERhdGEuZGF5MC5ob3VyW2Bob3VyJHtpfWBdLnRpbWU7XG4gICAgaWYgKG5ldyBEYXRlKHRpbWVTbGljZXIpLmdldFRpbWUoKSA+IG5ldyBEYXRlKGxvY2FsX3RpbWUpLmdldFRpbWUoKSkge1xuICAgICAgaWYgKGhvdXJseUZvcmVjYXN0RGF0YS5kYXkwLmhvdXJbYGhvdXIke2l9YF0uY2hhbmNlX29mX3Nub3cgPiAwKSB7XG4gICAgICAgIGNvdW50ZXIgKz0gMTtcbiAgICAgICAgaWYgKGNvdW50ZXIgPiAxKSB7XG4gICAgICAgICAgY2hhbmNlQXJyYXlbMV0gPVxuICAgICAgICAgICAgaG91cmx5Rm9yZWNhc3REYXRhLmRheTAuaG91cltgaG91ciR7aX1gXS5jaGFuY2Vfb2Zfc25vdztcbiAgICAgICAgICBsZXQgaW5pdGlhbENoYW5jZSA9IGNoYW5jZUFycmF5WzBdIC8gMTAwO1xuICAgICAgICAgIGxldCBpbmNyZWFzZSA9XG4gICAgICAgICAgICBpbml0aWFsQ2hhbmNlICsgKGNoYW5jZUFycmF5WzFdIC8gMTAwKSAqICgxIC0gaW5pdGlhbENoYW5jZSk7XG4gICAgICAgICAgY2hhbmNlQXJyYXlbMF0gPSBpbmNyZWFzZSAqIDEwMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGFuY2VBcnJheS5wdXNoKFxuICAgICAgICAgICAgaG91cmx5Rm9yZWNhc3REYXRhLmRheTAuaG91cltgaG91ciR7aX1gXS5jaGFuY2Vfb2Zfc25vd1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgY2hhbmNlT2ZTbm93Y291bnRlciArPVxuICAgICAgICAgIGhvdXJseUZvcmVjYXN0RGF0YS5kYXkwLmhvdXJbYGhvdXIke2l9YF0uY2hhbmNlX29mX3Nub3c7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlmIChjb3VudGVyID09IDApIHtcbiAgICByZXR1cm4gMDtcbiAgfSBlbHNlIGlmIChjb3VudGVyID09IDEpIHtcbiAgICByZXR1cm4gY2hhbmNlT2ZTbm93Y291bnRlcjtcbiAgfVxuXG4gIHJldHVybiBNYXRoLnJvdW5kKGNoYW5jZUFycmF5WzBdICogMTAwKSAvIDEwMDtcbn1cblxuZXhwb3J0IHsgY2hhbmNlT2ZSYWluLCBjaGFuY2VPZlNub3cgfTtcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcbmltcG9ydCB7IEtleSB9IGZyb20gXCIuL215S2V5XCI7XG5pbXBvcnQge1xuICBiYXNpY0RhdGEsXG4gIGFkZGl0aW9uYWxEYXRhLFxuICBlcnJvck1zZyxcbiAgZXJyb3JDbGVhbixcbiAgY29udmVydFRvQ2Vsc2l1cyxcbiAgY29udmVydFRvRmFocmVuaGVpdCxcbiAgbWFpbkNvbnZlcnRlckYsXG4gIG1haW5Db252ZXJ0ZXJDLFxufSBmcm9tIFwiLi9tYWluRE9NXCI7XG5pbXBvcnQge1xuICBkYWlseSxcbiAgaG91cmx5LFxuICBkYWlseUNvbnZlcnRlckYsXG4gIGRhaWx5Q29udmVydGVyQyxcbiAgaG91cmx5Q29udmVydGVyRixcbiAgaG91cmx5Q29udmVydGVyQyxcbiAgYXJyb3dzRnVuY3Rpb25hbGl0eSxcbn0gZnJvbSBcIi4vZm9yZWNhc3RET01cIjtcblxuY2xhc3MgV2VhdGhlciB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIGNvdW50cnksXG4gICAgY2l0eSxcbiAgICBsb2NhbF90aW1lLFxuICAgIGNvbmRpdGlvbixcbiAgICBjb25kaXRpb25faWNvbixcbiAgICBodW1pZGl0eSxcbiAgICBzdW5yaXNlLFxuICAgIHN1bnNldCxcbiAgICBjZWxzaXVzRGF0YSxcbiAgICBmYWhyZW5oZWl0RGF0YSxcbiAgICBob3VybHlGb3JlY2FzdERhdGFcbiAgKSB7XG4gICAgdGhpcy5jb3VudHJ5ID0gY291bnRyeTtcbiAgICB0aGlzLmNpdHkgPSBjaXR5O1xuICAgIHRoaXMubG9jYWxfdGltZSA9IGxvY2FsX3RpbWU7XG4gICAgdGhpcy5jb25kaXRpb24gPSBjb25kaXRpb247XG4gICAgdGhpcy5jb25kaXRpb25faWNvbiA9IGNvbmRpdGlvbl9pY29uO1xuICAgIHRoaXMuaHVtaWRpdHkgPSBodW1pZGl0eTtcbiAgICB0aGlzLnN1bnJpc2UgPSBzdW5yaXNlO1xuICAgIHRoaXMuc3Vuc2V0ID0gc3Vuc2V0O1xuICAgIHRoaXMuY2Vsc2l1c0RhdGEgPSBjZWxzaXVzRGF0YTtcbiAgICB0aGlzLmZhaHJlbmhlaXREYXRhID0gZmFocmVuaGVpdERhdGE7XG4gICAgdGhpcy5ob3VybHlGb3JlY2FzdERhdGEgPSBob3VybHlGb3JlY2FzdERhdGE7XG4gIH1cbiAgYmFzaWNEYXRhRE9NKCkge1xuICAgIGJhc2ljRGF0YShcbiAgICAgIHRoaXMuY2l0eSxcbiAgICAgIHRoaXMuY291bnRyeSxcbiAgICAgIHRoaXMubG9jYWxfdGltZSxcbiAgICAgIHRoaXMuY29uZGl0aW9uX2ljb24sXG4gICAgICB0aGlzLmNvbmRpdGlvbixcbiAgICAgIHRoaXMuY2Vsc2l1c0RhdGEudGVtcGVyYXR1cmVcbiAgICApO1xuICB9XG5cbiAgYWRkaXRpb25hbERhdGFET00oKSB7XG4gICAgYWRkaXRpb25hbERhdGEoXG4gICAgICB0aGlzLmh1bWlkaXR5LFxuICAgICAgdGhpcy5jZWxzaXVzRGF0YS5mZWVsc2xpa2UsXG4gICAgICB0aGlzLmNlbHNpdXNEYXRhLndpbmQsXG4gICAgICB0aGlzLnN1bnJpc2UsXG4gICAgICB0aGlzLnN1bnNldCxcbiAgICAgIHRoaXMubG9jYWxfdGltZSxcbiAgICAgIHRoaXMuaG91cmx5Rm9yZWNhc3REYXRhXG4gICAgKTtcbiAgfVxuICBkYXRhQ29udmVydGVyKCkge1xuICAgIGxldCBidXR0b24gPSBjb252ZXJ0VG9GYWhyZW5oZWl0KCk7XG4gICAgbGV0IGJ1dHRvbjIgPSBjb252ZXJ0VG9DZWxzaXVzKCk7XG4gICAgaWYgKGJ1dHRvbiAhPSB1bmRlZmluZWQgfHwgYnV0dG9uMiAhPSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYmFzaWMtZGF0YVwiKTtcbiAgICAgIGNvbnN0IGJ1dHRvbkNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICBidXR0b25Db250YWluZXIuY2xhc3NMaXN0LmFkZChcImNvbnZlcnRCdXR0b25Db250YWluZXJcIik7XG5cbiAgICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChidXR0b24pO1xuICAgICAgYnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKGJ1dHRvbjIpO1xuICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGJ1dHRvbkNvbnRhaW5lcik7XG5cbiAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBtYWluQ29udmVydGVyRihcbiAgICAgICAgICB0aGlzLmZhaHJlbmhlaXREYXRhLnRlbXBlcmF0dXJlLFxuICAgICAgICAgIHRoaXMuZmFocmVuaGVpdERhdGEuZmVlbHNsaWtlLFxuICAgICAgICAgIHRoaXMuZmFocmVuaGVpdERhdGEud2luZFxuICAgICAgICApO1xuICAgICAgfSk7XG4gICAgICBidXR0b24yLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIG1haW5Db252ZXJ0ZXJDKFxuICAgICAgICAgIHRoaXMuY2Vsc2l1c0RhdGEudGVtcGVyYXR1cmUsXG4gICAgICAgICAgdGhpcy5jZWxzaXVzRGF0YS5mZWVsc2xpa2UsXG4gICAgICAgICAgdGhpcy5jZWxzaXVzRGF0YS53aW5kXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cblxuY2xhc3MgZGFpbHlGb3JlY2FzdCB7XG4gIGNvbnN0cnVjdG9yKGRhaWx5Rm9yZWNhc3QpIHtcbiAgICB0aGlzLmRhaWx5Rm9yZWNhc3QgPSBkYWlseUZvcmVjYXN0O1xuICB9XG4gIGdlbmVyYXRlRGFpbHlEYXRhKCkge1xuICAgIGNvbnN0IGRhdGFDb250YWluZXJSZW1vdmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYXRhLWJhclwiKTtcbiAgICB3aGlsZSAoZGF0YUNvbnRhaW5lclJlbW92ZXIuZmlyc3RDaGlsZCkge1xuICAgICAgZGF0YUNvbnRhaW5lclJlbW92ZXIucmVtb3ZlQ2hpbGQoZGF0YUNvbnRhaW5lclJlbW92ZXIuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgT2JqZWN0LmtleXModGhpcy5kYWlseUZvcmVjYXN0KS5sZW5ndGg7IGkrKykge1xuICAgICAgbGV0IGRhdGVOb3cgPSB0aGlzLmRhaWx5Rm9yZWNhc3RbXCJkYXlcIiArIGldLmRhdGU7XG4gICAgICBsZXQgY29uZGl0aW9uSWNvbk5vdyA9IHRoaXMuZGFpbHlGb3JlY2FzdFtcImRheVwiICsgaV0uY29uZGl0aW9uX2ljb247XG4gICAgICBsZXQgdGVtcGVyYXR1cmVOb3cgPSB0aGlzLmRhaWx5Rm9yZWNhc3RbXCJkYXlcIiArIGldLmF2Z190ZW1wQztcbiAgICAgIGxldCBjb25kaXRpb25UZXh0ID0gdGhpcy5kYWlseUZvcmVjYXN0W1wiZGF5XCIgKyBpXS5jb25kaXRpb247XG4gICAgICBkYWlseShkYXRlTm93LCBjb25kaXRpb25JY29uTm93LCB0ZW1wZXJhdHVyZU5vdywgY29uZGl0aW9uVGV4dCk7XG4gICAgfVxuICB9XG4gIGdlbmVyYXRlRGFpbHlEYXRhQnV0dG9uKCkge1xuICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJkYWlseUJ1dHRvblwiKVswXTtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGNvbnN0IGlzRmFyID1cbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImN1cnJlbnRUZW1wZXJhdHVyZVwiKVswXS5pbm5lckhUTUw7XG4gICAgICBsZXQgaXNGYXJBcnJheSA9IGlzRmFyLnNwbGl0KFwiXCIpO1xuICAgICAgaWYgKGlzRmFyQXJyYXlbaXNGYXJBcnJheS5sZW5ndGggLSAxXSA9PSBcIkZcIikge1xuICAgICAgICB0aGlzLmdlbmVyYXRlRGFpbHlEYXRhKCk7XG4gICAgICAgIGRhaWx5Q29udmVydGVyRih0aGlzLmRhaWx5Rm9yZWNhc3QpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5nZW5lcmF0ZURhaWx5RGF0YSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGRhdGFDb252ZXJ0ZXIoKSB7XG4gICAgbGV0IGJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJjb252ZXJ0VG9GYWhyZW5oZWl0XCIpWzBdO1xuICAgIGxldCBidXR0b24yID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImNvbnZlcnRUb0NlbHNpdXNcIilbMF07XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBkYWlseUNvbnZlcnRlckYodGhpcy5kYWlseUZvcmVjYXN0KTtcbiAgICB9KTtcbiAgICBidXR0b24yLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBkYWlseUNvbnZlcnRlckModGhpcy5kYWlseUZvcmVjYXN0KTtcbiAgICB9KTtcbiAgfVxufVxuY2xhc3MgaG91cmx5Rm9yZWNhc3Qge1xuICBjb25zdHJ1Y3Rvcihob3VybHlGb3JlY2FzdCkge1xuICAgIHRoaXMuaG91cmx5Rm9yZWNhc3QgPSBob3VybHlGb3JlY2FzdDtcbiAgfVxuICBnZW5lcmF0ZUhvdXJseURhdGEoKSB7XG4gICAgY29uc3QgZGF0YUNvbnRhaW5lclJlbW92ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRhdGEtYmFyXCIpO1xuICAgIHdoaWxlIChkYXRhQ29udGFpbmVyUmVtb3Zlci5maXJzdENoaWxkKSB7XG4gICAgICBkYXRhQ29udGFpbmVyUmVtb3Zlci5yZW1vdmVDaGlsZChkYXRhQ29udGFpbmVyUmVtb3Zlci5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBPYmplY3Qua2V5cyh0aGlzLmhvdXJseUZvcmVjYXN0KS5sZW5ndGg7IGkrKykge1xuICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCAyNDsgaysrKSB7XG4gICAgICAgIGxldCBkYXRlTm93ID0gdGhpcy5ob3VybHlGb3JlY2FzdFtcImRheVwiICsgaV0uaG91cltcImhvdXJcIiArIGtdLnRpbWU7XG4gICAgICAgIGxldCBjb25kaXRpb25JY29uTm93ID1cbiAgICAgICAgICB0aGlzLmhvdXJseUZvcmVjYXN0W1wiZGF5XCIgKyBpXS5ob3VyW1wiaG91clwiICsga10uY29uZGl0aW9uX2ljb247XG4gICAgICAgIGxldCB0ZW1wZXJhdHVyZU5vdyA9XG4gICAgICAgICAgdGhpcy5ob3VybHlGb3JlY2FzdFtcImRheVwiICsgaV0uaG91cltcImhvdXJcIiArIGtdLnRlbXBlcmF0dXJlQztcbiAgICAgICAgbGV0IGNvbmRpdGlvblRleHQgPVxuICAgICAgICAgIHRoaXMuaG91cmx5Rm9yZWNhc3RbXCJkYXlcIiArIGldLmhvdXJbXCJob3VyXCIgKyBrXS5jb25kaXRpb247XG4gICAgICAgIGhvdXJseShkYXRlTm93LCBjb25kaXRpb25JY29uTm93LCB0ZW1wZXJhdHVyZU5vdywgY29uZGl0aW9uVGV4dCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGdlbmVyYXRlSG91cmx5RGF0YUJ1dHRvbigpIHtcbiAgICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiaG91cmx5QnV0dG9uXCIpWzBdO1xuICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgY29uc3QgaXNGYXIgPVxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY3VycmVudFRlbXBlcmF0dXJlXCIpWzBdLmlubmVySFRNTDtcbiAgICAgIGxldCBpc0ZhckFycmF5ID0gaXNGYXIuc3BsaXQoXCJcIik7XG4gICAgICBpZiAoaXNGYXJBcnJheVtpc0ZhckFycmF5Lmxlbmd0aCAtIDFdID09IFwiRlwiKSB7XG4gICAgICAgIHRoaXMuZ2VuZXJhdGVIb3VybHlEYXRhKCk7XG4gICAgICAgIGhvdXJseUNvbnZlcnRlckYodGhpcy5ob3VybHlGb3JlY2FzdCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmdlbmVyYXRlSG91cmx5RGF0YSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGRhdGFDb252ZXJ0ZXIoKSB7XG4gICAgbGV0IGJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJjb252ZXJ0VG9GYWhyZW5oZWl0XCIpWzBdO1xuICAgIGxldCBidXR0b24yID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImNvbnZlcnRUb0NlbHNpdXNcIilbMF07XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBob3VybHlDb252ZXJ0ZXJGKHRoaXMuaG91cmx5Rm9yZWNhc3QpO1xuICAgIH0pO1xuICAgIGJ1dHRvbjIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGhvdXJseUNvbnZlcnRlckModGhpcy5ob3VybHlGb3JlY2FzdCk7XG4gICAgfSk7XG4gIH1cbn1cblxuLy9idXR0b24gdGFraW5nIGxvY2F0aW9uIGZyb20gaW5wdXQgdGhhdCBmaXJlIGFwaSByZXF1ZXN0IGFuZCBsb2cgZGF0YVxuZnVuY3Rpb24gdGFrZUxvY2F0aW9uKCkge1xuICBjb25zdCBzZWFyY2hCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlYXJjaEJ1dHRvblwiKTtcbiAgc2VhcmNoQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGxldCB0ZXN0aW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvY2F0aW9uXCIpLnZhbHVlO1xuICAgIGZpcmVSZXF1ZXN0KHRlc3RpbnB1dCk7XG4gIH0pO1xufVxudGFrZUxvY2F0aW9uKCk7XG5cbi8vdGFrZSBpcCBhbmQgZGlzcGxheSB3ZWF0aGVyXG5hc3luYyBmdW5jdGlvbiBpcFJlcXVlc3QoKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVxdWVzdCA9IGF3YWl0IGZldGNoKFxuICAgICAgYGh0dHBzOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxL2lwLmpzb24/a2V5PSR7S2V5fSZxPWF1dG86aXBgLFxuICAgICAge1xuICAgICAgICBtb2RlOiBcImNvcnNcIixcbiAgICAgIH1cbiAgICApO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgY29uc3QgZGF0YSA9IHtcbiAgICAgIGlwOiByZXNwb25zZS5pcCxcbiAgICB9O1xuICAgIHJldHVybiBkYXRhO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgfVxufVxuaXBSZXF1ZXN0KClcbiAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICBsZXQgaXAgPSBkYXRhLmlwO1xuICAgIGZpcmVSZXF1ZXN0KGlwKTtcbiAgfSlcbiAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICBmaXJlUmVxdWVzdChcIkxvbmRvblwiKTtcbiAgfSk7XG5cbmFzeW5jIGZ1bmN0aW9uIGFwaVJlcXVlc3Qod2hhdExvY2F0aW9uKSB7XG4gIGVycm9yQ2xlYW4oKTtcbiAgdHJ5IHtcbiAgICBmdW5jdGlvbiBwYXNzRGF0YSgpIHtcbiAgICAgIGlmICh3aGF0TG9jYXRpb24gPT0gXCJrcmFrb3dcIikge1xuICAgICAgICBsZXQgcGFzc0RhdGEgPSB3aGF0TG9jYXRpb24gKyBcIiBcIiArIFwicGxcIjtcbiAgICAgICAgcmV0dXJuIHBhc3NEYXRhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGV0IHBhc3NEYXRhID0gd2hhdExvY2F0aW9uO1xuICAgICAgICByZXR1cm4gcGFzc0RhdGE7XG4gICAgICB9XG4gICAgfVxuICAgIGxldCBiZXR0ZXJMb29rdXAgPSBhd2FpdCBwYXNzRGF0YSgpO1xuXG4gICAgY29uc3QgcmVxdWVzdCA9IGF3YWl0IGZldGNoKFxuICAgICAgYGh0dHBzOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxL2ZvcmVjYXN0Lmpzb24/a2V5PSR7S2V5fSZxPSR7YmV0dGVyTG9va3VwfSZkYXlzPTNgLFxuICAgICAge1xuICAgICAgICBtb2RlOiBcImNvcnNcIixcbiAgICAgIH1cbiAgICApO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgIGNvbnN0IERhdGFPYmplY3QgPSB7XG4gICAgICBiYXNpY19kYXRhOiB7XG4gICAgICAgIGNvdW50cnk6IHJlc3BvbnNlLmxvY2F0aW9uLmNvdW50cnksXG4gICAgICAgIGNpdHk6IHJlc3BvbnNlLmxvY2F0aW9uLm5hbWUsXG4gICAgICAgIGxvY2FsX3RpbWU6IHJlc3BvbnNlLmxvY2F0aW9uLmxvY2FsdGltZSxcbiAgICAgICAgY29uZGl0aW9uOiByZXNwb25zZS5jdXJyZW50LmNvbmRpdGlvbi50ZXh0LFxuICAgICAgICBjb25kaXRpb25faWNvbjogXCJodHRwczpcIiArIHJlc3BvbnNlLmN1cnJlbnQuY29uZGl0aW9uLmljb24sXG4gICAgICAgIGh1bWlkaXR5OiByZXNwb25zZS5jdXJyZW50Lmh1bWlkaXR5LFxuICAgICAgICBzdW5yaXNlOiByZXNwb25zZS5mb3JlY2FzdC5mb3JlY2FzdGRheVswXS5hc3Ryby5zdW5yaXNlLFxuICAgICAgICBzdW5zZXQ6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5WzBdLmFzdHJvLnN1bnNldCxcbiAgICAgIH0sXG4gICAgICBjZWxzaXVzOiB7XG4gICAgICAgIGZlZWxzbGlrZTogcmVzcG9uc2UuY3VycmVudC5mZWVsc2xpa2VfYyxcbiAgICAgICAgdGVtcGVyYXR1cmU6IHJlc3BvbnNlLmN1cnJlbnQudGVtcF9jLFxuICAgICAgICB3aW5kOiByZXNwb25zZS5jdXJyZW50LndpbmRfa3BoLFxuICAgICAgfSxcbiAgICAgIGZhaHJlbmhlaXQ6IHtcbiAgICAgICAgZmVlbHNsaWtlOiByZXNwb25zZS5jdXJyZW50LmZlZWxzbGlrZV9mLFxuICAgICAgICB0ZW1wZXJhdHVyZTogcmVzcG9uc2UuY3VycmVudC50ZW1wX2YsXG4gICAgICAgIHdpbmQ6IHJlc3BvbnNlLmN1cnJlbnQud2luZF9tcGgsXG4gICAgICB9LFxuICAgICAgZm9yZWNhc3Q6IHtcbiAgICAgICAgLy9Mb29waW5nIHBlciBkYXlzIGFuZCBob3VycyBpbiBmdW5jdGlvbiBmb3JlY2FzdFBlckhvdXJDZWxzaXVzIGFuZCBmb3JlY2FzdF9wZXJfaG91cl9GYWhyZW5oZWl0XG4gICAgICAgIGZvcmVjYXN0X3Blcl9kYXk6IHt9LFxuICAgICAgICBmb3JlY2FzdF9wZXJfaG91cjoge30sXG4gICAgICB9LFxuICAgIH07XG4gICAgZnVuY3Rpb24gZm9yZWNhc3RQZXJEYXkoKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDM7IGkrKykge1xuICAgICAgICBEYXRhT2JqZWN0LmZvcmVjYXN0LmZvcmVjYXN0X3Blcl9kYXlbXCJkYXlcIiArIGldID0ge1xuICAgICAgICAgIGRhdGU6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmRhdGUsXG4gICAgICAgICAgY29uZGl0aW9uX2ljb246XG4gICAgICAgICAgICBcImh0dHBzOlwiICsgcmVzcG9uc2UuZm9yZWNhc3QuZm9yZWNhc3RkYXlbaV0uZGF5LmNvbmRpdGlvbi5pY29uLFxuICAgICAgICAgIGNvbmRpdGlvbjogcmVzcG9uc2UuZm9yZWNhc3QuZm9yZWNhc3RkYXlbaV0uZGF5LmNvbmRpdGlvbi50ZXh0LFxuICAgICAgICAgIGF2Z190ZW1wQzogcmVzcG9uc2UuZm9yZWNhc3QuZm9yZWNhc3RkYXlbaV0uZGF5LmF2Z3RlbXBfYyxcbiAgICAgICAgICBhdmdfdGVtcEY6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmRheS5hdmd0ZW1wX2YsXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZm9yZWNhc3RQZXJIb3VyKCkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpKyspIHtcbiAgICAgICAgRGF0YU9iamVjdC5mb3JlY2FzdC5mb3JlY2FzdF9wZXJfaG91cltcImRheVwiICsgaV0gPSB7XG4gICAgICAgICAgZGF0ZTogcmVzcG9uc2UuZm9yZWNhc3QuZm9yZWNhc3RkYXlbaV0uZGF0ZSxcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YU9iamVjdC5mb3JlY2FzdC5mb3JlY2FzdF9wZXJfaG91cltcImRheVwiICsgaV0uaG91ciA9IHt9O1xuICAgICAgICBmb3IgKGxldCBrID0gMDsgayA8IDI0OyBrKyspIHtcbiAgICAgICAgICBEYXRhT2JqZWN0LmZvcmVjYXN0LmZvcmVjYXN0X3Blcl9ob3VyW1wiZGF5XCIgKyBpXS5ob3VyW1wiaG91clwiICsga10gPSB7XG4gICAgICAgICAgICBjb25kaXRpb25faWNvbjpcbiAgICAgICAgICAgICAgXCJodHRwczpcIiArXG4gICAgICAgICAgICAgIHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmhvdXJba10uY29uZGl0aW9uLmljb24sXG4gICAgICAgICAgICBjb25kaXRpb246IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmhvdXJba10uY29uZGl0aW9uLnRleHQsXG4gICAgICAgICAgICB0ZW1wZXJhdHVyZUM6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmhvdXJba10udGVtcF9jLFxuICAgICAgICAgICAgdGVtcGVyYXR1cmVGOiByZXNwb25zZS5mb3JlY2FzdC5mb3JlY2FzdGRheVtpXS5ob3VyW2tdLnRlbXBfZixcbiAgICAgICAgICAgIGh1bWlkaXR5OiByZXNwb25zZS5mb3JlY2FzdC5mb3JlY2FzdGRheVtpXS5ob3VyW2tdLmh1bWlkaXR5LFxuICAgICAgICAgICAgY2hhbmNlX29mX3JhaW46XG4gICAgICAgICAgICAgIHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmhvdXJba10uY2hhbmNlX29mX3JhaW4sXG4gICAgICAgICAgICBjaGFuY2Vfb2Zfc25vdzpcbiAgICAgICAgICAgICAgcmVzcG9uc2UuZm9yZWNhc3QuZm9yZWNhc3RkYXlbaV0uaG91cltrXS5jaGFuY2Vfb2Zfc25vdyxcbiAgICAgICAgICAgIHRpbWU6IHJlc3BvbnNlLmZvcmVjYXN0LmZvcmVjYXN0ZGF5W2ldLmhvdXJba10udGltZSxcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yZWNhc3RQZXJEYXkoKTtcbiAgICBmb3JlY2FzdFBlckhvdXIoKTtcbiAgICByZXR1cm4gRGF0YU9iamVjdDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgZXJyb3JNc2coKTtcbiAgfVxufVxuZnVuY3Rpb24gZmlyZVJlcXVlc3QoaW5wdXR2YWx1ZSkge1xuICBhcGlSZXF1ZXN0KGlucHV0dmFsdWUpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY291bnRyeSxcbiAgICAgICAgY2l0eSxcbiAgICAgICAgbG9jYWxfdGltZSxcbiAgICAgICAgY29uZGl0aW9uLFxuICAgICAgICBjb25kaXRpb25faWNvbixcbiAgICAgICAgaHVtaWRpdHksXG4gICAgICAgIHN1bnJpc2UsXG4gICAgICAgIHN1bnNldCxcbiAgICAgIH0gPSBkYXRhLmJhc2ljX2RhdGE7XG4gICAgICBjb25zdCBjdXJyZW50Q2Vsc2l1c0RhdGEgPSBkYXRhLmNlbHNpdXM7XG4gICAgICBjb25zdCBjdXJyZW50RmFocmVuaGVpdERhdGEgPSBkYXRhLmZhaHJlbmhlaXQ7XG4gICAgICBjb25zdCBkYWlseUZvcmVjYXN0RGF0YSA9IGRhdGEuZm9yZWNhc3QuZm9yZWNhc3RfcGVyX2RheTtcbiAgICAgIGNvbnN0IGhvdXJseUZvcmVjYXN0RGF0YSA9IGRhdGEuZm9yZWNhc3QuZm9yZWNhc3RfcGVyX2hvdXI7XG4gICAgICBjb25zdCBjdXJyZW5XZWF0aGVyID0gbmV3IFdlYXRoZXIoXG4gICAgICAgIGNvdW50cnksXG4gICAgICAgIGNpdHksXG4gICAgICAgIGxvY2FsX3RpbWUsXG4gICAgICAgIGNvbmRpdGlvbixcbiAgICAgICAgY29uZGl0aW9uX2ljb24sXG4gICAgICAgIGh1bWlkaXR5LFxuICAgICAgICBzdW5yaXNlLFxuICAgICAgICBzdW5zZXQsXG4gICAgICAgIGN1cnJlbnRDZWxzaXVzRGF0YSxcbiAgICAgICAgY3VycmVudEZhaHJlbmhlaXREYXRhLFxuICAgICAgICBob3VybHlGb3JlY2FzdERhdGFcbiAgICAgICk7XG4gICAgICBjb25zdCBkYWlseUZvcmVjYXN0T2JqZWN0ID0gbmV3IGRhaWx5Rm9yZWNhc3QoZGFpbHlGb3JlY2FzdERhdGEpO1xuICAgICAgY29uc3QgaG91cmx5Rm9yZWNhc3RPYmplY3QgPSBuZXcgaG91cmx5Rm9yZWNhc3QoaG91cmx5Rm9yZWNhc3REYXRhKTtcbiAgICAgIGN1cnJlbldlYXRoZXIuYmFzaWNEYXRhRE9NKCk7XG4gICAgICBjdXJyZW5XZWF0aGVyLmFkZGl0aW9uYWxEYXRhRE9NKCk7XG4gICAgICBjdXJyZW5XZWF0aGVyLmRhdGFDb252ZXJ0ZXIoKTtcbiAgICAgIGRhaWx5Rm9yZWNhc3RPYmplY3QuZ2VuZXJhdGVEYWlseURhdGEoKTtcbiAgICAgIGRhaWx5Rm9yZWNhc3RPYmplY3QuZ2VuZXJhdGVEYWlseURhdGFCdXR0b24oKTtcbiAgICAgIGRhaWx5Rm9yZWNhc3RPYmplY3QuZGF0YUNvbnZlcnRlcigpO1xuICAgICAgaG91cmx5Rm9yZWNhc3RPYmplY3QuZ2VuZXJhdGVIb3VybHlEYXRhQnV0dG9uKCk7XG4gICAgICBob3VybHlGb3JlY2FzdE9iamVjdC5kYXRhQ29udmVydGVyKCk7XG4gICAgfSlcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICBhcnJvd3NGdW5jdGlvbmFsaXR5KCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfSk7XG59XG4iXSwibmFtZXMiOlsiZGFpbHkiLCJkYXRlIiwiY29uZGl0aW9uX2ljb24iLCJ0ZW1wIiwiY29uZGl0aW9uVGV4dCIsImRhaWx5RGF0YUNvbnRhaW5lciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJkYWlseURhdGVIb2xkZXIiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwicmVzdWx0Iiwic3BsaXQiLCJzbGljZSIsImpvaW4iLCJzcGxpY2UiLCJpbm5lckhUTUwiLCJkYWlseUNvbmRpdGlvbkljb24iLCJzZXRBdHRyaWJ1dGUiLCJkYWlseUNvbmRpdGlvblRleHQiLCJkYWlseVRlbXBlcmF0dXJlSG9sZGVyIiwibW9yZVRleHQiLCJDb250YWluZXIiLCJhcHBlbmRDaGlsZCIsImhvdXJseSIsImhvdXJseURhdGFDb250YWluZXIiLCJob3VybHlEYXRlSG9sZGVyIiwiaG91cmx5Q29uZGl0aW9uSWNvbiIsImhvdXJseUNvbmRpdGlvblRleHQiLCJob3VybHlUZW1wZXJhdHVyZUhvbGRlciIsImRhaWx5Q29udmVydGVyRiIsImRhaWx5Rm9yZWNhc3QiLCJ0ZW1wZXJhdHVyZVRvRiIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJpIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInRlbXBlcmF0dXJlTm93IiwiYXZnX3RlbXBGIiwiZGFpbHlDb252ZXJ0ZXJDIiwidGVtcGVyYXR1cmVUb0MiLCJhdmdfdGVtcEMiLCJob3VybHlDb252ZXJ0ZXJGIiwiaG91cmx5Rm9yZWNhc3QiLCJ0ZW1wZXJhdHVyZVRvRkhvdXJseSIsImsiLCJ0ZW1wZXJhdHVyZSIsImhvdXIiLCJ0ZW1wZXJhdHVyZUYiLCJob3VybHlDb252ZXJ0ZXJDIiwidGVtcGVyYXR1cmVUb0NIb3VybHkiLCJ0ZW1wZXJhdHVyZUMiLCJhcnJvd3NGdW5jdGlvbmFsaXR5Iiwic2xpZGluZ0NvbnRhaW5lciIsImxlZnRCdXR0b24iLCJyaWdodEJ1dHRvbiIsImVsZW1lbnRXaWR0aCIsInF1ZXJ5U2VsZWN0b3IiLCJvZmZzZXRXaWR0aCIsImNvbnNvbGUiLCJsb2ciLCJhZGRFdmVudExpc3RlbmVyIiwic2Nyb2xsTGVmdCIsImJ1dHRvbkNvbnRhaW5lciIsImRhaWx5QnV0dG9uIiwiaG91cmx5QnV0dG9uIiwiYXJyb3dDb250YWluZXIiLCJsZWZ0QXJyb3ciLCJyaWdodEFycm93IiwiY2hpbGROb2RlcyIsInJlcGxhY2VDaGlsZCIsImNoaWxkcmVuIiwiYnV0dG9ucyIsInNjcm9sbENvbnRhaW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzY3JvbGxCeSIsImxlZnQiLCJkZWx0YVkiLCJkYXRhQmFyU2Nyb2xsIiwiaXNNb3VzZURvd24iLCJzdGFydFgiLCJlIiwicGFnZVgiLCJjdXJyZW50WCIsImRpc3RhbmNlIiwidG91Y2hlcyIsImRhdGFCYXJTbGlkZXIiLCJiYXNpY0RhdGEiLCJjaXR5IiwiY291bnRyeSIsInRpbWUiLCJjb25kaXRpb25JY29uIiwiY29uZGl0aW9uIiwiZGF0YUhvbGRlciIsImNpdHlDb3VudHJ5TmFtZSIsInRpbWVEYXRlIiwiY29uZGl0aW9uQ29udGFpbmVyIiwiY29uZGl0aW9uSWNvbkNvbnRhaW5lciIsIndlYXRoZXJDb25kaXRpb24iLCJjdXJyZW50VGVtcGVyYXR1cmUiLCJhZGRpdGlvbmFsRGF0YSIsImh1bWlkaXR5IiwiZmVlbHNsaWtlIiwid2luZHNwZWVkIiwic3VucmlzZSIsInN1bnNldCIsImxvY2FsX3RpbWUiLCJob3VybHlGb3JlY2FzdERhdGEiLCJhZGRpdGlvbmFsRGF0YUhvbGRlciIsImh1bWlkaXR5RGF0YSIsImZlZWxzbGlrZURhdGEiLCJ3aW5kc3BlZWREYXRhIiwiY2hhbmNlUmFpbkRhdGEiLCJzaGlmdCIsInN1bnJpc2VEYXRhIiwic3Vuc2V0RGF0YSIsImVycm9yTXNnIiwiZm9ybSIsIndyb25nSW5wdXQiLCJlcnJvckNsZWFuIiwibGFzdENoaWxkIiwicmVtb3ZlIiwiY29udmVydFRvRmFocmVuaGVpdCIsImNvbnRhaW5lciIsImJ1dHRvbiIsImNvbnRhaW5zIiwiY29udmVydFRvQ2Vsc2l1cyIsIm1haW5Db252ZXJ0ZXJGIiwidGVtcEYiLCJmZWVsc2xpa2VGIiwid2luZHNwZWVkTSIsIm1haW5Db252ZXJ0ZXJDIiwidGVtcEMiLCJmZWVsc2xpa2VDIiwid2luZHNwZWVkSyIsIktleSIsImNoYW5jZU9mUmFpbiIsImNoYW5jZU9mUmFpbmNvdW50ZXIiLCJjb3VudGVyIiwiY2hhbmNlQXJyYXkiLCJkYXkwIiwidGltZVNsaWNlciIsIkRhdGUiLCJnZXRUaW1lIiwiY2hhbmNlX29mX3JhaW4iLCJpbml0aWFsQ2hhbmNlIiwiaW5jcmVhc2UiLCJwdXNoIiwiTWF0aCIsInJvdW5kIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJkIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiV2VhdGhlciIsImNvbnN0cnVjdG9yIiwiY2Vsc2l1c0RhdGEiLCJmYWhyZW5oZWl0RGF0YSIsInRoaXMiLCJiYXNpY0RhdGFET00iLCJhZGRpdGlvbmFsRGF0YURPTSIsIndpbmQiLCJkYXRhQ29udmVydGVyIiwiYnV0dG9uMiIsImdlbmVyYXRlRGFpbHlEYXRhIiwiZGF0YUNvbnRhaW5lclJlbW92ZXIiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJkYXRlTm93IiwiY29uZGl0aW9uSWNvbk5vdyIsImdlbmVyYXRlRGFpbHlEYXRhQnV0dG9uIiwiaXNGYXJBcnJheSIsImdlbmVyYXRlSG91cmx5RGF0YSIsImdlbmVyYXRlSG91cmx5RGF0YUJ1dHRvbiIsImZpcmVSZXF1ZXN0IiwiaW5wdXR2YWx1ZSIsImFzeW5jIiwid2hhdExvY2F0aW9uIiwiYmV0dGVyTG9va3VwIiwicmVxdWVzdCIsImZldGNoIiwibW9kZSIsInJlc3BvbnNlIiwianNvbiIsIkRhdGFPYmplY3QiLCJiYXNpY19kYXRhIiwibG9jYXRpb24iLCJuYW1lIiwibG9jYWx0aW1lIiwiY3VycmVudCIsInRleHQiLCJpY29uIiwiZm9yZWNhc3QiLCJmb3JlY2FzdGRheSIsImFzdHJvIiwiY2Vsc2l1cyIsImZlZWxzbGlrZV9jIiwidGVtcF9jIiwid2luZF9rcGgiLCJmYWhyZW5oZWl0IiwiZmVlbHNsaWtlX2YiLCJ0ZW1wX2YiLCJ3aW5kX21waCIsImZvcmVjYXN0X3Blcl9kYXkiLCJmb3JlY2FzdF9wZXJfaG91ciIsImZvcmVjYXN0UGVyRGF5IiwiZGF5IiwiYXZndGVtcF9jIiwiYXZndGVtcF9mIiwiZm9yZWNhc3RQZXJIb3VyIiwiY2hhbmNlX29mX3Nub3ciLCJlcnJvciIsImFwaVJlcXVlc3QiLCJ0aGVuIiwiZGF0YSIsImN1cnJlbnRDZWxzaXVzRGF0YSIsImN1cnJlbnRGYWhyZW5oZWl0RGF0YSIsImRhaWx5Rm9yZWNhc3REYXRhIiwiY3VycmVuV2VhdGhlciIsImRhaWx5Rm9yZWNhc3RPYmplY3QiLCJob3VybHlGb3JlY2FzdE9iamVjdCIsImNhdGNoIiwidmFsdWUiLCJpcCIsImlwUmVxdWVzdCJdLCJzb3VyY2VSb290IjoiIn0=